[{"path":"https://joelnitta.github.io/dwctaxon/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to dwctaxon","title":"Contributing to dwctaxon","text":"outlines propose change dwctaxon.","code":""},{"path":"https://joelnitta.github.io/dwctaxon/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing to dwctaxon","text":"can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"https://joelnitta.github.io/dwctaxon/CONTRIBUTING.html","id":"bigger-changes","dir":"","previous_headings":"","what":"Bigger changes","title":"Contributing to dwctaxon","text":"want make bigger change, ’s good idea first file issue make sure maintainer agrees ’s needed. ’ve found bug, please file issue illustrates bug minimal reprex (also help write unit test, needed).","code":""},{"path":"https://joelnitta.github.io/dwctaxon/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"Bigger changes","what":"Pull request process","title":"Contributing to dwctaxon","text":"Fork package clone onto computer. haven’t done , recommend using usethis::create_from_github(\"joelnitta/dwctaxon\", fork = TRUE). Install development dependencies devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Create Git branch pull request (PR). recommend using usethis::pr_init(\"brief-description--change\"). Make changes, commit git, create PR running usethis::pr_push(), following prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. user-facing changes, add bullet top NEWS.md (.e. just first header). Follow style described https://style.tidyverse.org/news.html.","code":""},{"path":"https://joelnitta.github.io/dwctaxon/CONTRIBUTING.html","id":"code-style","dir":"","previous_headings":"Bigger changes","what":"Code style","title":"Contributing to dwctaxon","text":"New code follow tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat unit tests. Contributions test cases included easier accept.","code":""},{"path":"https://joelnitta.github.io/dwctaxon/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to dwctaxon","text":"dwctaxon project uses rOpenSci Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://joelnitta.github.io/dwctaxon/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2021 dwctaxon authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://joelnitta.github.io/dwctaxon/articles/editing.html","id":"the-data","dir":"Articles","previous_headings":"","what":"The data","title":"Editing DWC taxon data","text":"dwctaxon comes example dataset dct_filmies, taxonomic data filmy ferns (family Hymenophyllaceae). Let’s take quick look data (may need scroll right frame code see text): demonstration purposes, just use first five rows: Although DWC taxon format includes large number terms (columns)1, typical database use . dct_filmies includes 5 columns. usage clear biologists, two columns need explanation. taxonID unique ID row (name), acceptedNameUsageID provided synonyms; indicates taxonID accepted name. information DWC taxon format, see vignette(\"--dwc\"). rest vignette consist modifying dataset.","code":"dct_filmies #> # A tibble: 2,451 × 5 #>    taxonID  acceptedNameUsageID taxonomicStatus taxonRank scientificName                             #>    <chr>    <chr>               <chr>           <chr>     <chr>                                      #>  1 54115096 NA                  accepted        species   Cephalomanes atrovirens Presl              #>  2 54133783 54115097            synonym         species   Trichomanes crassum Copel.                 #>  3 54115097 NA                  accepted        species   Cephalomanes crassum (Copel.) M. G. Price  #>  4 54133784 54115098            synonym         species   Trichomanes densinervium Copel.            #>  5 54115098 NA                  accepted        species   Cephalomanes densinervium (Copel.) Copel.  #>  6 54133786 54115100            synonym         species   Cephalomanes curvatum (J. Sm.) V. D. Bosch #>  7 54133787 54115100            synonym         species   Cephalomanes javanica (Bl.) V. D. Bosch    #>  8 54133788 54115100            synonym         species   Cephalomanes oblongifolium Presl           #>  9 54133789 54115100            synonym         species   Cephalomanes zollingeri V. D. Bosch        #> 10 54133790 54115100            synonym         species   Lacostea javanica (Bl.) Prantl             #> # … with 2,441 more rows filmies_small <- head(dct_filmies, 5)"},{"path":[]},{"path":"https://joelnitta.github.io/dwctaxon/articles/editing.html","id":"adding-rows-by-vector","dir":"Articles","previous_headings":"Adding rows","what":"Adding rows by vector","title":"Editing DWC taxon data","text":"dct_add_row() used add rows. simplest way specifying new values vectors (vectors length 1 recycled): Notice although specify taxonID modified, columns automatically filled default2; can turned setting fill_taxon_id stamp_modified arguments FALSE. names new values valid DWC terms. can see terms available dct_terms: exceptions requirement using DWC terms, however. save typing rather long names, aliases available commonly used terms follows: taxon_id = taxonID sci_name = scientificName tax_status = taxonomicStatus usage_id = acceptedNameUsageID usage_name = acceptedNameUsage can obtain results using aliases:","code":"filmies_small |>   dct_add_row(     scientificName = c(\"Homo sapiens\", \"Drosophila melanogaster\"),     taxonomicStatus = \"accepted\",     taxonRank = \"species\"   ) #> # A tibble: 7 × 6 #>   taxonID  acceptedNameUsageID taxonomicStatus taxonRank scientificName                            modified            #>   <chr>    <chr>               <chr>           <chr>     <chr>                                     <chr>               #> 1 54115096 NA                  accepted        species   Cephalomanes atrovirens Presl             NA                  #> 2 54133783 54115097            synonym         species   Trichomanes crassum Copel.                NA                  #> 3 54115097 NA                  accepted        species   Cephalomanes crassum (Copel.) M. G. Price NA                  #> 4 54133784 54115098            synonym         species   Trichomanes densinervium Copel.           NA                  #> 5 54115098 NA                  accepted        species   Cephalomanes densinervium (Copel.) Copel. NA                  #> 6 be111923 NA                  accepted        species   Homo sapiens                              2023-02-16 01:32:23 #> 7 5942a5b0 NA                  accepted        species   Drosophila melanogaster                   2023-02-16 01:32:23 dct_terms #> # A tibble: 47 × 2 #>    group term                #>  * <chr> <chr>               #>  1 taxon taxonID             #>  2 taxon scientificNameID    #>  3 taxon acceptedNameUsageID #>  4 taxon parentNameUsageID   #>  5 taxon originalNameUsageID #>  6 taxon nameAccordingToID   #>  7 taxon namePublishedInID   #>  8 taxon taxonConceptID      #>  9 taxon scientificName      #> 10 taxon acceptedNameUsage   #> # … with 37 more rows filmies_small |>   dct_add_row(     sci_name = c(\"Homo sapiens\", \"Drosophila melanogaster\"),     tax_status = \"accepted\",     taxonRank = \"species\"   ) #> # A tibble: 7 × 6 #>   taxonID  acceptedNameUsageID taxonomicStatus taxonRank scientificName                            modified            #>   <chr>    <chr>               <chr>           <chr>     <chr>                                     <chr>               #> 1 54115096 NA                  accepted        species   Cephalomanes atrovirens Presl             NA                  #> 2 54133783 54115097            synonym         species   Trichomanes crassum Copel.                NA                  #> 3 54115097 NA                  accepted        species   Cephalomanes crassum (Copel.) M. G. Price NA                  #> 4 54133784 54115098            synonym         species   Trichomanes densinervium Copel.           NA                  #> 5 54115098 NA                  accepted        species   Cephalomanes densinervium (Copel.) Copel. NA                  #> 6 be111923 NA                  accepted        species   Homo sapiens                              2023-02-16 01:32:23 #> 7 5942a5b0 NA                  accepted        species   Drosophila melanogaster                   2023-02-16 01:32:23"},{"path":"https://joelnitta.github.io/dwctaxon/articles/editing.html","id":"adding-rows-by-dataframe","dir":"Articles","previous_headings":"Adding rows","what":"Adding rows by dataframe","title":"Editing DWC taxon data","text":"Adding rows vectors shown works well need add small number rows. However, get unwieldy large number add. case, can instead add via dataframe. dataframe column names matching valid DWC taxon terms (, usage shorter aliases allowed): Note case taxonID already existed data add, generated automatically.","code":"# Let's add some rows from the original dct_filmies to_add <- tail(dct_filmies)  filmies_small |>   dct_add_row(new_dat = to_add) #> # A tibble: 11 × 6 #>    taxonID  acceptedNameUsageID taxonomicStatus taxonRank    scientificName                                              modified            #>    <chr>    <chr>               <chr>           <chr>        <chr>                                                       <chr>               #>  1 54115096 NA                  accepted        species      Cephalomanes atrovirens Presl                               NA                  #>  2 54133783 54115097            synonym         species      Trichomanes crassum Copel.                                  NA                  #>  3 54115097 NA                  accepted        species      Cephalomanes crassum (Copel.) M. G. Price                   NA                  #>  4 54133784 54115098            synonym         species      Trichomanes densinervium Copel.                             NA                  #>  5 54115098 NA                  accepted        species      Cephalomanes densinervium (Copel.) Copel.                   NA                  #>  6 54126747 NA                  accepted        infraspecies Hymenophyllum myriocarpum var. endiviifolium (Desv.) Stolze 2023-02-16 01:32:23 #>  7 54135528 54126748            synonym         species      Hymenophyllum nigrescens Liebm.                             2023-02-16 01:32:23 #>  8 54135530 54126748            synonym         species      Mecodium nigricans (Presl ex Kl.) Copel.                    2023-02-16 01:32:23 #>  9 54135531 54126748            synonym         species      Sphaerocionium nigricans Presl ex Kl.                       2023-02-16 01:32:23 #> 10 54126748 NA                  accepted        infraspecies Hymenophyllum myriocarpum var. nigrescens (Liebm.) Stolze   2023-02-16 01:32:23 #> 11 54126749 NA                  accepted        infraspecies Hymenophyllum trichophyllum var. buesii C. V. Morton        2023-02-16 01:32:23"},{"path":[]},{"path":"https://joelnitta.github.io/dwctaxon/articles/editing.html","id":"identifying-rows-to-modify","dir":"Articles","previous_headings":"Modifying rows","what":"Identifying rows to modify","title":"Editing DWC taxon data","text":"dct_modify_row() changes values existing row. , helpful reiterate purpose taxonID column: unique identifier row (taxonomic name) data. use taxonID identify row change, apply new values using DWC terms (, usage shorter aliases allowed). Notice additional automatic changes besides just taxonomicStatus. Since new status \"accepted\", dwctaxon automatically set acceptedNameUsageID (indicates taxonID accepted name synonyms) NA. behavior can disabled setting clear_usage_id argument FALSE. see modified field updated well. However, can difficult humans keep track taxonID matches name; typically, think terms species names, ID numbers. reason, can also use sci_name (scientificName) instead taxon_id specify row modify3. provide taxon_id sci_name, dwctaxon identify row taxon_id apply sci_name new scientific name:","code":"# Change the status of Trichomanes crassum Copel. to \"accepted\" filmies_small |>   dct_modify_row(     taxon_id = \"54133783\", # taxonID of Trichomanes crassum Copel.     tax_status = \"accepted\"   ) #> # A tibble: 5 × 6 #>   taxonID  acceptedNameUsageID taxonomicStatus taxonRank scientificName                            modified            #>   <chr>    <chr>               <chr>           <chr>     <chr>                                     <chr>               #> 1 54115096 NA                  accepted        species   Cephalomanes atrovirens Presl             NA                  #> 2 54133783 NA                  accepted        species   Trichomanes crassum Copel.                2023-02-16 01:32:23 #> 3 54115097 NA                  accepted        species   Cephalomanes crassum (Copel.) M. G. Price NA                  #> 4 54133784 54115098            synonym         species   Trichomanes densinervium Copel.           NA                  #> 5 54115098 NA                  accepted        species   Cephalomanes densinervium (Copel.) Copel. NA # Change the status of Trichomanes crassum Copel. to \"accepted\" filmies_small |>   dct_modify_row(     sci_name = \"Trichomanes crassum Copel.\",     tax_status = \"accepted\"   ) #> # A tibble: 5 × 6 #>   taxonID  acceptedNameUsageID taxonomicStatus taxonRank scientificName                            modified            #>   <chr>    <chr>               <chr>           <chr>     <chr>                                     <chr>               #> 1 54115096 NA                  accepted        species   Cephalomanes atrovirens Presl             NA                  #> 2 54133783 NA                  accepted        species   Trichomanes crassum Copel.                2023-02-16 01:32:24 #> 3 54115097 NA                  accepted        species   Cephalomanes crassum (Copel.) M. G. Price NA                  #> 4 54133784 54115098            synonym         species   Trichomanes densinervium Copel.           NA                  #> 5 54115098 NA                  accepted        species   Cephalomanes densinervium (Copel.) Copel. NA # Change the name of Trichomanes crassum Copel. filmies_small |>   dct_modify_row(     taxon_id = \"54133783\", # taxonID of Trichomanes crassum Copel.     sci_name = \"Bogus name\"   ) #> # A tibble: 5 × 6 #>   taxonID  acceptedNameUsageID taxonomicStatus taxonRank scientificName                            modified            #>   <chr>    <chr>               <chr>           <chr>     <chr>                                     <chr>               #> 1 54115096 NA                  accepted        species   Cephalomanes atrovirens Presl             NA                  #> 2 54133783 54115097            synonym         species   Bogus name                                2023-02-16 01:32:24 #> 3 54115097 NA                  accepted        species   Cephalomanes crassum (Copel.) M. G. Price NA                  #> 4 54133784 54115098            synonym         species   Trichomanes densinervium Copel.           NA                  #> 5 54115098 NA                  accepted        species   Cephalomanes densinervium (Copel.) Copel. NA"},{"path":"https://joelnitta.github.io/dwctaxon/articles/editing.html","id":"automatic-re-mapping-of-synonyms","dir":"Articles","previous_headings":"Modifying rows","what":"Automatic re-mapping of synonyms","title":"Editing DWC taxon data","text":"Another convenient automated behavior dwctaxon ability “re-map” synonyms. , previously accepted name (say, “”) changed synonym another name (say, “B”), synonyms “” also changed synonyms “B”. Let’s see works example data: Notice two names modified even though specified one; since Trichomanes densinervium Copel. synonym Cephalomanes densinervium (Copel.) Copel., also gets re-mapped accepted name Cephalomanes crassum (Copel.) M. G. Price","code":"# Change C. densinervium to a synonym of C. crassum filmies_small |>   dct_modify_row(     sci_name = \"Cephalomanes densinervium (Copel.) Copel.\",     tax_status = \"synonym\",     usage_name = \"Cephalomanes crassum (Copel.) M. G. Price\"   ) #> # A tibble: 5 × 6 #>   taxonID  acceptedNameUsageID taxonomicStatus taxonRank scientificName                            modified            #>   <chr>    <chr>               <chr>           <chr>     <chr>                                     <chr>               #> 1 54115096 NA                  accepted        species   Cephalomanes atrovirens Presl             NA                  #> 2 54133783 54115097            synonym         species   Trichomanes crassum Copel.                NA                  #> 3 54115097 NA                  accepted        species   Cephalomanes crassum (Copel.) M. G. Price NA                  #> 4 54133784 54115097            synonym         species   Trichomanes densinervium Copel.           2023-02-16 01:32:24 #> 5 54115098 54115097            synonym         species   Cephalomanes densinervium (Copel.) Copel. 2023-02-16 01:32:24"},{"path":"https://joelnitta.github.io/dwctaxon/articles/editing.html","id":"filling-columns","dir":"Articles","previous_headings":"","what":"Filling columns","title":"Editing DWC taxon data","text":"described vignette(\"--dwc\"), several terms DWC call “term - termID” pairs, e.g., acceptedNameUsage acceptedNameUsageID, parentNameUsage parentNameUsageID, etc. Typically, one actual scientific name (e.g., acceptedNameUsage, accepted name synonym), one taxonID name (e.g., acceptedNameUsageID, taxonID accepted name synonym). manager database choose whether use either terms pair. sort data redundant prone error entered manually, dwctaxon can us dct_fill_col(). easiest way see works example (may need scroll right see new column): meaning arguments fill_to fill_from think fairly clear: filling acceptedNameUsage column values scientificName. match_to match_from bit trickier; describe find data filling. , looking acceptedNameUsage matching acceptedNameUsageID (match_from) taxonID (match_to). Like said, ’s easiest figure dct_fill_col() trying .","code":"# Fill-in the acceptedNameUsage column with scientific names filmies_small |>   dct_fill_col(     fill_to = \"acceptedNameUsage\",     fill_from = \"scientificName\",     match_to = \"taxonID\",     match_from = \"acceptedNameUsageID\"   ) #> # A tibble: 5 × 6 #>   taxonID  acceptedNameUsageID taxonomicStatus taxonRank scientificName                            acceptedNameUsage                         #>   <chr>    <chr>               <chr>           <chr>     <chr>                                     <chr>                                     #> 1 54115096 NA                  accepted        species   Cephalomanes atrovirens Presl             NA                                        #> 2 54133783 54115097            synonym         species   Trichomanes crassum Copel.                Cephalomanes crassum (Copel.) M. G. Price #> 3 54115097 NA                  accepted        species   Cephalomanes crassum (Copel.) M. G. Price NA                                        #> 4 54133784 54115098            synonym         species   Trichomanes densinervium Copel.           Cephalomanes densinervium (Copel.) Copel. #> 5 54115098 NA                  accepted        species   Cephalomanes densinervium (Copel.) Copel. NA"},{"path":"https://joelnitta.github.io/dwctaxon/articles/validation.html","id":"setup","dir":"Articles","previous_headings":"","what":"Setup","title":"Validating DWC taxon data","text":"Start loading packages setting random number generator seed since vignette involves random samples.","code":"library(dwctaxon) library(tidyverse) # for tidy data wrangling  set.seed(12345)"},{"path":"https://joelnitta.github.io/dwctaxon/articles/validation.html","id":"the-data","dir":"Articles","previous_headings":"","what":"The data","title":"Validating DWC taxon data","text":", use example dataset comes dwctaxon, dct_filmies: However, dct_filmies already well-formatted pass validation checks! lets introduce noise make things interesting. first rows may look , know data now problems.","code":"dct_filmies #> # A tibble: 2,451 × 5 #>    taxonID  acceptedNameUsageID taxonomicStatus taxonRank scientificName                             #>    <chr>    <chr>               <chr>           <chr>     <chr>                                      #>  1 54115096 NA                  accepted        species   Cephalomanes atrovirens Presl              #>  2 54133783 54115097            synonym         species   Trichomanes crassum Copel.                 #>  3 54115097 NA                  accepted        species   Cephalomanes crassum (Copel.) M. G. Price  #>  4 54133784 54115098            synonym         species   Trichomanes densinervium Copel.            #>  5 54115098 NA                  accepted        species   Cephalomanes densinervium (Copel.) Copel.  #>  6 54133786 54115100            synonym         species   Cephalomanes curvatum (J. Sm.) V. D. Bosch #>  7 54133787 54115100            synonym         species   Cephalomanes javanica (Bl.) V. D. Bosch    #>  8 54133788 54115100            synonym         species   Cephalomanes oblongifolium Presl           #>  9 54133789 54115100            synonym         species   Cephalomanes zollingeri V. D. Bosch        #> 10 54133790 54115100            synonym         species   Lacostea javanica (Bl.) Prantl             #> # … with 2,441 more rows filmies_dirty <-   dct_filmies |>   # Change taxonomic status of one row to 'good'   dct_modify_row(taxon_id = \"54115096\", tax_status = \"good\") |>   # Duplicate some rows at the end   bind_rows(tail(dct_filmies)) |>   # Insert bad values for `acceptedNameUsageID` of 5 random rows   rows_update(     tibble(       taxonID = sample(dct_filmies$taxonID, 5),       acceptedNameUsageID = sample(letters, 5)     ),     by = \"taxonID\"   )  filmies_dirty #> # A tibble: 2,457 × 6 #>    taxonID  acceptedNameUsageID taxonomicStatus taxonRank scientificName                             modified            #>    <chr>    <chr>               <chr>           <chr>     <chr>                                      <chr>               #>  1 54115096 NA                  good            species   Cephalomanes atrovirens Presl              2023-02-16 01:32:27 #>  2 54133783 54115097            synonym         species   Trichomanes crassum Copel.                 NA                  #>  3 54115097 NA                  accepted        species   Cephalomanes crassum (Copel.) M. G. Price  NA                  #>  4 54133784 54115098            synonym         species   Trichomanes densinervium Copel.            NA                  #>  5 54115098 NA                  accepted        species   Cephalomanes densinervium (Copel.) Copel.  NA                  #>  6 54133786 54115100            synonym         species   Cephalomanes curvatum (J. Sm.) V. D. Bosch NA                  #>  7 54133787 54115100            synonym         species   Cephalomanes javanica (Bl.) V. D. Bosch    NA                  #>  8 54133788 54115100            synonym         species   Cephalomanes oblongifolium Presl           NA                  #>  9 54133789 54115100            synonym         species   Cephalomanes zollingeri V. D. Bosch        NA                  #> 10 54133790 54115100            synonym         species   Lacostea javanica (Bl.) Prantl             NA                  #> # … with 2,447 more rows"},{"path":"https://joelnitta.github.io/dwctaxon/articles/validation.html","id":"error-on-failure","dir":"Articles","previous_headings":"","what":"Error on failure","title":"Validating DWC taxon data","text":"dct_validate() workhorse function validating DWC data. default mode, dct_validate() issue error first time finds something wrong data (words, first check fails): dwctaxon tries provide useful error messages help determine data causing problem. , see rows taxonID 54126747, 54135528, 54135530, 54135531, 54126748, 54126749 duplicated. course know ’s duplicated purpose; real dataset, use information search duplicated values fix .","code":"dct_validate(filmies_dirty) #> Error: check_taxon_id failed #>    taxonID detected with duplicated value #>    Bad taxonID: 54126747, 54135528, 54135530, 54135531, 54126748, 54126749"},{"path":"https://joelnitta.github.io/dwctaxon/articles/validation.html","id":"summary-on-failure","dir":"Articles","previous_headings":"","what":"Summary on failure","title":"Validating DWC taxon data","text":"troubleshooting DWC taxon dataset, may useful know problems instead fixing one time. case, set on_fail argument \"summary\" (on_fail can either default value \"error\" \"summary\"): (may need scroll right output see text). case, dct_validate() still issues warning let us know validation pass. error check columns describe went wrong; columns tell us data find errors. detailed summary, definitely able hunt bugs dataset!","code":"dct_validate(filmies_dirty, on_fail = \"summary\") #> Warning in assert_that_d(length(duplicated_tax_id) == 0, data = tibble::tibble(taxonID = duplicated_tax_id, : taxonID detected with duplicated value #> Warning in assert_that_d(sum(tax_status_is_bad) == 0, data = tibble::tibble(taxonID = bad_taxon_id, : taxonID detected whose taxonomicStatus is not in valid_tax_status (accepted, synonym, variant, NA) #> Warning in assert_that_d(sum(map_id_is_bad) == 0, data = tibble::tibble(taxonID = bad_taxon_id, : taxonID detected whose acceptedNameUsageID value does not map to taxonID of an existing name. #> Warning in assert_that_d(length(duplicated_sci_name) == 0, data = tibble::tibble(taxonID = bad_tax_id, : scientificName detected with duplicated value #> # A tibble: 18 × 6 #>    taxonID  acceptedNameUsageID scientificName                                              taxonomicStatus error                                                                                              check         #>    <chr>    <chr>               <chr>                                                       <chr>           <glue>                                                                                             <chr>         #>  1 54133841 k                   Trichomanes cumingii (Presl) C. Chr.                        NA              taxonID detected whose acceptedNameUsageID value does not map to taxonID of an existing name.      check_mapping #>  2 54134450 z                   Trichomanes omphalodes (Vieill.) C. Chr.                    NA              taxonID detected whose acceptedNameUsageID value does not map to taxonID of an existing name.      check_mapping #>  3 54134462 b                   Trichomanes amabile Nakai                                   NA              taxonID detected whose acceptedNameUsageID value does not map to taxonID of an existing name.      check_mapping #>  4 54134950 v                   Mecodium atrovirens (Col.) Copel.                           NA              taxonID detected whose acceptedNameUsageID value does not map to taxonID of an existing name.      check_mapping #>  5 54135730 x                   Leptocionium attenuatum (Hook.) Bosch                       NA              taxonID detected whose acceptedNameUsageID value does not map to taxonID of an existing name.      check_mapping #>  6 54126747 NA                  Hymenophyllum myriocarpum var. endiviifolium (Desv.) Stolze NA              scientificName detected with duplicated value                                                      check_sci_na… #>  7 54135528 NA                  Hymenophyllum nigrescens Liebm.                             NA              scientificName detected with duplicated value                                                      check_sci_na… #>  8 54135530 NA                  Mecodium nigricans (Presl ex Kl.) Copel.                    NA              scientificName detected with duplicated value                                                      check_sci_na… #>  9 54135531 NA                  Sphaerocionium nigricans Presl ex Kl.                       NA              scientificName detected with duplicated value                                                      check_sci_na… #> 10 54126748 NA                  Hymenophyllum myriocarpum var. nigrescens (Liebm.) Stolze   NA              scientificName detected with duplicated value                                                      check_sci_na… #> 11 54126749 NA                  Hymenophyllum trichophyllum var. buesii C. V. Morton        NA              scientificName detected with duplicated value                                                      check_sci_na… #> 12 54115096 NA                  Cephalomanes atrovirens Presl                               good            taxonID detected whose taxonomicStatus is not in valid_tax_status (accepted, synonym, variant, NA) check_tax_st… #> 13 54126747 NA                  NA                                                          NA              taxonID detected with duplicated value                                                             check_taxon_… #> 14 54135528 NA                  NA                                                          NA              taxonID detected with duplicated value                                                             check_taxon_… #> 15 54135530 NA                  NA                                                          NA              taxonID detected with duplicated value                                                             check_taxon_… #> 16 54135531 NA                  NA                                                          NA              taxonID detected with duplicated value                                                             check_taxon_… #> 17 54126748 NA                  NA                                                          NA              taxonID detected with duplicated value                                                             check_taxon_… #> 18 54126749 NA                  NA                                                          NA              taxonID detected with duplicated value                                                             check_taxon_…"},{"path":"https://joelnitta.github.io/dwctaxon/articles/validation.html","id":"checks","dir":"Articles","previous_headings":"","what":"Checks","title":"Validating DWC taxon data","text":"may wondering, separate “error” “check” columns summary output? dct_validate() conducts many smaller checks, can turned . complete description, run ?dct_validate(). turn, checks can identify different particular problems; granular description given “error” column. Furthermore, checks run dct_validate() can also run individual function. example, let’s just check values acceptedUsageID corresponding taxonID (words, synonyms map properly): important note checks compatible . example, check_sci_name checks scientific names (DWC term scientificName) non-missing unique; check_status_diff checks cases identical scientific names, taxonomic status name different. default settings dct_validate() use former latter. Whether expect scientific names unique depends set data1.","code":"filmies_dirty |>   dct_check_mapping() #> Error: check_mapping failed. #> taxonID detected whose acceptedNameUsageID value does not map to taxonID of an existing name. #> Bad taxonID: 54133841, 54134450, 54134462, 54134950, 54135730 #> Bad scientificName: Trichomanes cumingii (Presl) C. Chr., Trichomanes omphalodes (Vieill.) C. Chr., Trichomanes amabile Nakai, Mecodium atrovirens (Col.) Copel., Leptocionium attenuatum (Hook.) Bosch #> Bad acceptedNameUsageID: k, z, b, v, x"},{"path":"https://joelnitta.github.io/dwctaxon/articles/validation.html","id":"controlled-vocabularies","dir":"Articles","previous_headings":"","what":"Controlled vocabularies","title":"Validating DWC taxon data","text":"DWC taxon terms expected take small number values controlled vocabulary. example, taxonStatus (taxonomic status scientific name) may expected include values “accepted”, “synonym”, etc. unlike, e.g., scientificName, try control range possible values. However, although DWC recommends using controlled vocabulary terms, specify actual values! dwctaxon lets set (tries employ reasonable defaults), shown next section.","code":""},{"path":"https://joelnitta.github.io/dwctaxon/articles/validation.html","id":"changing-the-defaults","dir":"Articles","previous_headings":"","what":"Changing the defaults","title":"Validating DWC taxon data","text":"Say want use different set allowed values taxonStatus. , let’s include “good” data pass check taxonomic status (remember modified data taxonomicStatus one rows \"good\"). One way use valid_tax_status argument dct_validate() dct_check_tax_status(): specifying argument every time want check something gets tedious. can change default setting valid_tax_status dct_options() like : Now can run dct_check_tax_status() use new default value: can change back original default values reset = TRUE: Now running code throws error: large number settings can modified. See ?dct_options() description . can view current status options (default values) running dct_options() arguments: check value one particular setting passing name $ operator:","code":"filmies_dirty |>   dct_check_tax_status(     valid_tax_status = \"good, accepted, synonym\",     on_success = \"logical\" # Issue \"TRUE\" if the check passes   ) #> [1] TRUE dct_options(valid_tax_status = \"good, accepted, synonym\") filmies_dirty |>   dct_check_tax_status(on_success = \"logical\") #> [1] TRUE dct_options(reset = TRUE) filmies_dirty |>   dct_check_tax_status(on_success = \"logical\") #> Error: check_tax_status failed. #> taxonID detected whose taxonomicStatus is not in valid_tax_status (accepted, synonym, variant, NA) #> Bad taxonID: 54115096 #> Bad scientificName: Cephalomanes atrovirens Presl #> Bad taxonomicStatus: good dct_options() #> $check_taxon_id #> [1] TRUE #>  #> $check_tax_status #> [1] TRUE #>  #> $check_mapping_accepted #> [1] TRUE #>  #> $check_mapping_parent #> [1] TRUE #>  #> $check_mapping_original #> [1] TRUE #>  #> $check_mapping_accepted_status #> [1] FALSE #>  #> $check_sci_name #> [1] TRUE #>  #> $check_status_diff #> [1] FALSE #>  #> $check_col_names #> [1] TRUE #>  #> $valid_tax_status #> [1] \"accepted, synonym, variant, NA\" #>  #> $skip_missing_cols #> [1] FALSE #>  #> $on_success #> [1] \"data\" #>  #> $on_fail #> [1] \"error\" #>  #> $fill_taxon_id #> [1] TRUE #>  #> $fill_usage_id #> [1] TRUE #>  #> $clear_usage_id #> [1] TRUE #>  #> $clear_usage_name #> [1] TRUE #>  #> $fill_usage_name #> [1] TRUE #>  #> $remap_names #> [1] TRUE #>  #> $remap_variant #> [1] FALSE #>  #> $stamp_modified #> [1] TRUE #>  #> $strict #> [1] FALSE #>  #> $quiet #> [1] FALSE dct_options()$valid_tax_status #> [1] \"accepted, synonym, variant, NA\""},{"path":"https://joelnitta.github.io/dwctaxon/articles/what-is-dwc.html","id":"dwc-is-a-standard-for-biodiversity-data","dir":"Articles","previous_headings":"","what":"DWC is a standard for biodiversity data","title":"What is DWC?","text":"According official documentation, Darwin Core standard maintained Darwin Core Maintenance Interest Group. includes glossary terms (contexts might called properties, elements, fields, columns, attributes, concepts) intended facilitate sharing information biological diversity providing identifiers, labels, definitions. Darwin Core primarily based taxa, occurrence nature documented observations, specimens, samples, related information. (emphasis added) “terms” referred typically encountered columns rectangular data (spreadsheets), scientificName (scientific name taxon), lifeStage (life stage organism observed), etc. providing controlled vocabulary clear definitions terms, DWC greatly facilitates collection sharing biological data. example, Global Biodiversity Information Facility (GBIF), synthesizes biodiversity data global scale, uses DWC. practice, given set DWC data contained archive (zip file) including multiple spreadsheets (CSV files) XML files additional metadata. spreadsheets typically include datasets like occurrences, taxonomy, collection events. DWC archive components, https://gcube.wiki.gcube-system.org/gcube/Darwin_Core_Terms parts DWC organism occurrence data clearly important, scope dwctaxon, focuses taxonomic data.","code":""},{"path":"https://joelnitta.github.io/dwctaxon/articles/what-is-dwc.html","id":"features-of-the-dwc-taxon-format","dir":"Articles","previous_headings":"","what":"Features of the DWC taxon format","title":"What is DWC?","text":"terms used DWC format taxonomic data (“DWC taxon”) familiar biologists. simple example mapping taxonomic data left DWC terms right genus Sarda: Example terms DWC taxon, https://gcube.wiki.gcube-system.org/gcube/Darwin_Core_Terms However, peculiarities good familiar follows.","code":""},{"path":"https://joelnitta.github.io/dwctaxon/articles/what-is-dwc.html","id":"vertically-oriented","dir":"Articles","previous_headings":"Features of the DWC taxon format","what":"Vertically oriented","title":"What is DWC?","text":"Linnaean system taxonomy organizes taxa hierarchy, may used working taxonomic data “wide” format row species, like : Indeed, DWC taxon, higher taxonomic levels like genus, family, order valid terms may used. However, species valid DWC term. row DWC taxonomic database single scientific name rank, just species. typical data oriented vertically (“long” format): since genus, family, etc. valid DWC terms, can also included (applicable):","code":""},{"path":"https://joelnitta.github.io/dwctaxon/articles/what-is-dwc.html","id":"machine-and-human-friendly","dir":"Articles","previous_headings":"Features of the DWC taxon format","what":"Machine and human friendly","title":"What is DWC?","text":"browse DWC taxon terms, notice many pairs similar terms acceptedNameUsage acceptedNameUsageID, parentNameUsage parentNameUsageID, etc. used similar purposes, one value easy humans understand useful machines (computer programs). example, acceptedNameUsage accepted name synonym (e.g., Picea abies (L.) H. Karst accepted name Pinus abies L.), acceptedNameUsageID unique ID (typically, taxonID) accepted name (typically short sequence letters numbers, depends dataset). makes data format somewhat redundant, also easier human parse can see actual accepted name synonym immediately, instead look taxonID. hand, scientificName can include duplicates (rare cases name published twice, etc.), referring accepted name unique ID safer problem computer. can see works example dataset comes dwctaxon, dct_filmies: , Trichomanes crassum Copel. synonym Cephalomanes crassum (Copel.) M. G. Price (notice acceptedNameUsageID Trichomanes crassum Copel. matches taxonID Cephalomanes crassum (Copel.) M. G. Price). dataset, acceptedNameUsageID used, valid add column acceptedNameUsage. learn , please see vignette(\"editing\").","code":"library(dwctaxon) head(dct_filmies) #> # A tibble: 6 × 5 #>   taxonID  acceptedNameUsageID taxonomicStatus taxonRank scientificName                             #>   <chr>    <chr>               <chr>           <chr>     <chr>                                      #> 1 54115096 NA                  accepted        species   Cephalomanes atrovirens Presl              #> 2 54133783 54115097            synonym         species   Trichomanes crassum Copel.                 #> 3 54115097 NA                  accepted        species   Cephalomanes crassum (Copel.) M. G. Price  #> 4 54133784 54115098            synonym         species   Trichomanes densinervium Copel.            #> 5 54115098 NA                  accepted        species   Cephalomanes densinervium (Copel.) Copel.  #> 6 54133786 54115100            synonym         species   Cephalomanes curvatum (J. Sm.) V. D. Bosch"},{"path":"https://joelnitta.github.io/dwctaxon/articles/what-is-dwc.html","id":"extensible","dir":"Articles","previous_headings":"Features of the DWC taxon format","what":"Extensible","title":"What is DWC?","text":"many terms listed DWC taxon documentation – 37 count! However, unlikely given taxonomic database uses ; fact, ’ve encountered use subset terms, none strictly required. practice typically want least scientificName (scientific name taxon, including author known) taxonID (unique identifier row dataset). Furthermore, terms likely restricted vocabularies. example, given dataset may use limited set words describe taxonomicStatus like “accepted”, “synonym”, “doubtful”. contrast term (nearly) anything, like scientificName. DWC provide official set vocabularies; left database manager determine . One feature dwctaxon verify values want allow used given term. learn , please see vignette(\"validation\"). qualities make DWC taxon format flexible, can meet needs dataset hand. dwctaxon functions try provide sensible defaults, may need adjusted appropriately.","code":""},{"path":"https://joelnitta.github.io/dwctaxon/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Joel H. Nitta. Author, maintainer. Wataru Iwasaki. Contributor.","code":""},{"path":"https://joelnitta.github.io/dwctaxon/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Nitta Iwasaki (2022). dwctaxon R package working Darwin Core Taxon data. https://github.com/joelnitta/dwctaxon","code":"@Misc{,   title = {The dwctaxon R package for working with Darwin Core Taxon data},   author = {Joel H. Nitta and Wataru Iwasaki},   year = {2022},   url = {https://github.com/joelnitta/dwctaxon}, }"},{"path":"https://joelnitta.github.io/dwctaxon/index.html","id":"dwctaxon-","dir":"","previous_headings":"","what":"Tools for Working with Darwin Core Taxon Data in R","title":"Tools for Working with Darwin Core Taxon Data in R","text":"goal dwctaxon facilitate working Darwin Core Taxon data R. typical use-case dwctaxon create Darwin Core Taxon datasets scratch (although ), rather enable easy modification validation existing datasets. primary motivation validation dataset can used taxonomic name resolution, example taxastand R package. detailed usage examples, see vignettes: DWC? Editing DWC taxon data Validating DWC taxon data","code":""},{"path":"https://joelnitta.github.io/dwctaxon/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Tools for Working with Darwin Core Taxon Data in R","text":"dwctaxon can installed r-universe github. ","code":"install.packages(\"dwctaxon\", repos = 'https://joelnitta.r-universe.dev') # install.packages(\"remotes\") remotes::install_github(\"joelnitta/dwctaxon\")"},{"path":"https://joelnitta.github.io/dwctaxon/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Tools for Working with Darwin Core Taxon Data in R","text":"First, load packages dataset work : dct_filmies taxonomic dataset filmy ferns included dwctaxon. demonstration purposes, just use first five rows: functions dwctaxon start dct_.","code":"library(tibble) # recommended for pretty printing of tibbles library(dwctaxon)  dct_filmies #> # A tibble: 2,451 × 5 #>    taxonID  acceptedNameUsageID taxonomicStatus taxonRank scientificName                             #>    <chr>    <chr>               <chr>           <chr>     <chr>                                      #>  1 54115096 <NA>                accepted        species   Cephalomanes atrovirens Presl              #>  2 54133783 54115097            synonym         species   Trichomanes crassum Copel.                 #>  3 54115097 <NA>                accepted        species   Cephalomanes crassum (Copel.) M. G. Price  #>  4 54133784 54115098            synonym         species   Trichomanes densinervium Copel.            #>  5 54115098 <NA>                accepted        species   Cephalomanes densinervium (Copel.) Copel.  #>  6 54133786 54115100            synonym         species   Cephalomanes curvatum (J. Sm.) V. D. Bosch #>  7 54133787 54115100            synonym         species   Cephalomanes javanica (Bl.) V. D. Bosch    #>  8 54133788 54115100            synonym         species   Cephalomanes oblongifolium Presl           #>  9 54133789 54115100            synonym         species   Cephalomanes zollingeri V. D. Bosch        #> 10 54133790 54115100            synonym         species   Lacostea javanica (Bl.) Prantl             #> # … with 2,441 more rows filmies_small <- head(dct_filmies, 5)"},{"path":"https://joelnitta.github.io/dwctaxon/index.html","id":"edit-data","dir":"","previous_headings":"Usage","what":"Edit data","title":"Tools for Working with Darwin Core Taxon Data in R","text":"dct_add_row() adds one rows, automatically providing values taxonID. dct_modify_row() modifies row, automatically re-mapping synonyms needed. dct_fill_col() fills values columns “term” - “termID” pairs (e.g., acceptedNameUsage acceptedNameUsageID).","code":"filmies_small |>   dct_add_row(     sci_name = \"Hymenophyllum dwctaxonense Nitta\",     taxonomicStatus = \"accepted\"   ) #> # A tibble: 6 × 6 #>   taxonID  acceptedNameUsageID taxonomicStatus taxonRank scientificName                            modified            #>   <chr>    <chr>               <chr>           <chr>     <chr>                                     <chr>               #> 1 54115096 <NA>                accepted        species   Cephalomanes atrovirens Presl             <NA>                #> 2 54133783 54115097            synonym         species   Trichomanes crassum Copel.                <NA>                #> 3 54115097 <NA>                accepted        species   Cephalomanes crassum (Copel.) M. G. Price <NA>                #> 4 54133784 54115098            synonym         species   Trichomanes densinervium Copel.           <NA>                #> 5 54115098 <NA>                accepted        species   Cephalomanes densinervium (Copel.) Copel. <NA>                #> 6 193e2011 <NA>                accepted        <NA>      Hymenophyllum dwctaxonense Nitta          2023-02-10 17:07:29 # Change C. densinervium to a synonym of C. crassum filmies_small |>   dct_modify_row(     sci_name = \"Cephalomanes densinervium (Copel.) Copel.\",     tax_status = \"synonym\",     usage_name = \"Cephalomanes crassum (Copel.) M. G. Price\"   ) #> # A tibble: 5 × 6 #>   taxonID  acceptedNameUsageID taxonomicStatus taxonRank scientificName                            modified            #>   <chr>    <chr>               <chr>           <chr>     <chr>                                     <chr>               #> 1 54115096 <NA>                accepted        species   Cephalomanes atrovirens Presl             <NA>                #> 2 54133783 54115097            synonym         species   Trichomanes crassum Copel.                <NA>                #> 3 54115097 <NA>                accepted        species   Cephalomanes crassum (Copel.) M. G. Price <NA>                #> 4 54133784 54115097            synonym         species   Trichomanes densinervium Copel.           2023-02-10 17:07:29 #> 5 54115098 54115097            synonym         species   Cephalomanes densinervium (Copel.) Copel. 2023-02-10 17:07:29 # Fill-in the acceptedNameUsage column with scientific names filmies_small |>   dct_fill_col(     fill_to = \"acceptedNameUsage\",     fill_from = \"scientificName\",     match_to = \"taxonID\",     match_from = \"acceptedNameUsageID\"   ) #> # A tibble: 5 × 6 #>   taxonID  acceptedNameUsageID taxonomicStatus taxonRank scientificName                            acceptedNameUsage                         #>   <chr>    <chr>               <chr>           <chr>     <chr>                                     <chr>                                     #> 1 54115096 <NA>                accepted        species   Cephalomanes atrovirens Presl             <NA>                                      #> 2 54133783 54115097            synonym         species   Trichomanes crassum Copel.                Cephalomanes crassum (Copel.) M. G. Price #> 3 54115097 <NA>                accepted        species   Cephalomanes crassum (Copel.) M. G. Price <NA>                                      #> 4 54133784 54115098            synonym         species   Trichomanes densinervium Copel.           Cephalomanes densinervium (Copel.) Copel. #> 5 54115098 <NA>                accepted        species   Cephalomanes densinervium (Copel.) Copel. <NA>"},{"path":"https://joelnitta.github.io/dwctaxon/index.html","id":"validate-data","dir":"","previous_headings":"Usage","what":"Validate data","title":"Tools for Working with Darwin Core Taxon Data in R","text":"dct_validate() main function validation, automatically conducts series checks. individual checks can run dct_check_*() functions. dct_filmies dataset already well-formatted, pass validation: demonstration purposes, let’s mess data: default, dct_validate() stop error first check fails: may useful get overview checks failed. can done setting on_fail \"summary\":","code":"# Default behavior is to return the original dataset if checks pass # For this example, return TRUE instead dct_validate(dct_filmies, on_success = \"logical\") #> [1] TRUE # Start by duplicating some data filmies_dirty <- rbind(head(dct_filmies), head(dct_filmies, 2)) # Replace some values of `acceptedNameUsageID` with random letters filmies_dirty$acceptedNameUsageID[sample(1:8, 5)] <- sample(letters, 5) dct_validate(filmies_dirty) #> Error: check_taxon_id failed #>    taxonID detected with duplicated value #>    Bad taxonID: 54115096, 54133783 dct_validate(filmies_dirty, on_fail = \"summary\") #> Warning in assert_that_d(length(duplicated_tax_id) == 0, data = tibble::tibble(taxonID = duplicated_tax_id, : isTRUE(x = condition) is not #> TRUE #> Warning in assert_that_d(sum(map_id_is_bad) == 0, data = tibble::tibble(taxonID = bad_taxon_id, : taxonID detected whose acceptedNameUsageID #> value does not map to taxonID of an existing name. #> Warning in assert_that_d(length(duplicated_sci_name) == 0, data = tibble::tibble(scientificName = duplicated_sci_name, : scientificName #> detected with duplicated value #> # A tibble: 9 × 5 #>   taxonID  acceptedNameUsageID scientificName                             error                                    check          #>   <chr>    <chr>               <chr>                                      <glue>                                   <chr>          #> 1 54115096 b                   Cephalomanes atrovirens Presl              taxonID detected whose acceptedNameUs... check_mapping  #> 2 54133783 k                   Trichomanes crassum Copel.                 taxonID detected whose acceptedNameUs... check_mapping  #> 3 54115097 s                   Cephalomanes crassum (Copel.) M. G. Price  taxonID detected whose acceptedNameUs... check_mapping  #> 4 54133786 n                   Cephalomanes curvatum (J. Sm.) V. D. Bosch taxonID detected whose acceptedNameUs... check_mapping  #> 5 54133783 p                   Trichomanes crassum Copel.                 taxonID detected whose acceptedNameUs... check_mapping  #> 6 <NA>     <NA>                Cephalomanes atrovirens Presl              scientificName detected with duplicat... check_sci_name #> 7 <NA>     <NA>                Trichomanes crassum Copel.                 scientificName detected with duplicat... check_sci_name #> 8 54115096 <NA>                <NA>                                       taxonID detected with duplicated value   check_taxon_id #> 9 54133783 <NA>                <NA>                                       taxonID detected with duplicated value   check_taxon_id"},{"path":"https://joelnitta.github.io/dwctaxon/index.html","id":"piping","dir":"","previous_headings":"Usage","what":"Piping","title":"Tools for Working with Darwin Core Taxon Data in R","text":"functions dwctaxon take dataframe first argument return dataframe default, “pipe-friendly” can chained together: ’s often good idea include dct_validate() end chain make sure modified taxonomic database still correctly formatted.","code":"dct_filmies |>   dct_modify_row(     taxon_id = \"54133783\",     tax_status = \"accepted\"   ) |>   dct_add_row(     sci_name = \"Hymenophyllum dwctaxonense Nitta\",     taxonomicStatus = \"accepted\"   ) |>   dct_validate() #> # A tibble: 2,452 × 6 #>    taxonID  acceptedNameUsageID taxonomicStatus taxonRank scientificName                             modified            #>    <chr>    <chr>               <chr>           <chr>     <chr>                                      <chr>               #>  1 54115096 <NA>                accepted        species   Cephalomanes atrovirens Presl              <NA>                #>  2 54133783 <NA>                accepted        species   Trichomanes crassum Copel.                 2023-02-10 17:07:29 #>  3 54115097 <NA>                accepted        species   Cephalomanes crassum (Copel.) M. G. Price  <NA>                #>  4 54133784 54115098            synonym         species   Trichomanes densinervium Copel.            <NA>                #>  5 54115098 <NA>                accepted        species   Cephalomanes densinervium (Copel.) Copel.  <NA>                #>  6 54133786 54115100            synonym         species   Cephalomanes curvatum (J. Sm.) V. D. Bosch <NA>                #>  7 54133787 54115100            synonym         species   Cephalomanes javanica (Bl.) V. D. Bosch    <NA>                #>  8 54133788 54115100            synonym         species   Cephalomanes oblongifolium Presl           <NA>                #>  9 54133789 54115100            synonym         species   Cephalomanes zollingeri V. D. Bosch        <NA>                #> 10 54133790 54115100            synonym         species   Lacostea javanica (Bl.) Prantl             <NA>                #> # … with 2,442 more rows"},{"path":"https://joelnitta.github.io/dwctaxon/index.html","id":"citing-this-package","dir":"","previous_headings":"","what":"Citing this package","title":"Tools for Working with Darwin Core Taxon Data in R","text":"use package, please cite ! example: example DOI overall package. latest DOI, use using latest version package:  can find DOIs older versions viewing “Releases” menu right.","code":"Nitta, JH (2022) dwctaxon: Tools for working with Darwin Core Taxon data in R. https://doi.org/10.5281/zenodo.6388271"},{"path":"https://joelnitta.github.io/dwctaxon/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"Tools for Working with Darwin Core Taxon Data in R","text":"Contributions package welcome! Please see Contribution Guide Code Conduct.","code":""},{"path":"https://joelnitta.github.io/dwctaxon/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"Tools for Working with Darwin Core Taxon Data in R","text":"MIT License","code":""},{"path":"https://joelnitta.github.io/dwctaxon/reference/dct_add_row.html","id":null,"dir":"Reference","previous_headings":"","what":"Add row(s) to a taxonomic database — dct_add_row","title":"Add row(s) to a taxonomic database — dct_add_row","text":"Add one rows taxonomic database Darwin Core (DWC) format.","code":""},{"path":"https://joelnitta.github.io/dwctaxon/reference/dct_add_row.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add row(s) to a taxonomic database — dct_add_row","text":"","code":"dct_add_row(   tax_dat,   taxon_id = NULL,   sci_name = NULL,   tax_status = NULL,   usage_id = NULL,   usage_name = NULL,   new_dat = NULL,   fill_taxon_id = dct_options()$fill_taxon_id,   fill_usage_id = dct_options()$fill_usage_id,   stamp_modified = dct_options()$stamp_modified,   strict = dct_options()$strict,   ... )"},{"path":"https://joelnitta.github.io/dwctaxon/reference/dct_add_row.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add row(s) to a taxonomic database — dct_add_row","text":"tax_dat Dataframe; taxonomic database DWC format. taxon_id Character numeric vector; values add taxonID column. Can also use taxonomicID. Ignored new_dat NULL. sci_name Character vector; values add scientificName column. Can also use scientificName. Ignored new_dat NULL. tax_status Character vector; values add taxonomicStatus column. Can also use taxonomicStatus. Ignored new_dat NULL. usage_id Character numeric vector; values add acceptedNameUsageID column. Can also use acceptedNameUsageID. Ignored new_dat NULL. usage_name Character vector; values add acceptedNameUsage column. Can also use acceptedNameUsage. Ignored new_dat NULL. new_dat dataframe including columns corresponding one arguments, except tax_dat. DWC terms can also included additional columns. rows new_dat appended input data (tax_dat). fill_taxon_id Logical vector length 1; taxon_id provided, values taxonID column filled looking scientificName? Default TRUE. fill_usage_id Logical vector length 1; usage_id provided, values acceptedNameUsageID column filled matching acceptedNameUsage scientificName? Default TRUE. stamp_modified Logical vector length 1; modified column newly created modified row include timestamp date time creation/modification? Default TRUE. strict Logical vector length 1; taxonomic checks run updated taxonomic database? Default FALSE. ... Additional data add, specified sets named character numeric vectors; e.g., parentNameUsageID = \"6SH4\". name must valid column name data DWC format. Ignored new_dat NULL.","code":""},{"path":"https://joelnitta.github.io/dwctaxon/reference/dct_add_row.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add row(s) to a taxonomic database — dct_add_row","text":"Dataframe; taxonomic database DWC format.","code":""},{"path":"https://joelnitta.github.io/dwctaxon/reference/dct_add_row.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add row(s) to a taxonomic database — dct_add_row","text":"Arguments taxon_id, sci_name, tax_status, usage_id, usage_name provided convenience avoid typing longer \"taxonomicID\", \"scientificName\", \"taxonomicStatus\", \"acceptedNameUsageID\", \"acceptedNameUsage\", respectively, latter may used instead. fill_taxon_id fill_usage_id act newly added data (fill columns tax_dat). modify settings used validation strict TRUE, use dct_options().","code":""},{"path":"https://joelnitta.github.io/dwctaxon/reference/dct_add_row.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add row(s) to a taxonomic database — dct_add_row","text":"","code":"tibble::tibble(   taxonID = \"123\",   scientificName = \"Foogenus barspecies\",   acceptedNameUsageID = NA_character_,   taxonomicStatus = \"accepted\" ) |>   dct_add_row(     sci_name = \"Foogenus barspecies var. bla\",     parentNameUsageID = \"123\",     nameAccordingTo = \"me\",     strict = TRUE   ) #> # A tibble: 2 × 7 #>   taxonID  scientificName               accept…¹ taxon…² paren…³ nameA…⁴ modif…⁵ #>   <chr>    <chr>                        <chr>    <chr>   <chr>   <chr>   <chr>   #> 1 123      Foogenus barspecies          NA       accept… NA      NA      NA      #> 2 cfedfbbb Foogenus barspecies var. bla NA       NA      123     me      2023-0… #> # … with abbreviated variable names ¹​acceptedNameUsageID, ²​taxonomicStatus, #> #   ³​parentNameUsageID, ⁴​nameAccordingTo, ⁵​modified"},{"path":"https://joelnitta.github.io/dwctaxon/reference/dct_check_mapping.html","id":null,"dir":"Reference","previous_headings":"","what":"Check mapping of usage taxonomic IDs — dct_check_mapping","title":"Check mapping of usage taxonomic IDs — dct_check_mapping","text":"Check values terms like 'acceptedUsageID' map properly taxonID Darwin Core (DWC) taxonomic data.","code":""},{"path":"https://joelnitta.github.io/dwctaxon/reference/dct_check_mapping.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check mapping of usage taxonomic IDs — dct_check_mapping","text":"","code":"dct_check_mapping(   tax_dat,   on_fail = dct_options()$on_fail,   on_success = dct_options()$on_success,   col_select = \"acceptedNameUsageID\",   quiet = dct_options()$quiet )"},{"path":"https://joelnitta.github.io/dwctaxon/reference/dct_check_mapping.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check mapping of usage taxonomic IDs — dct_check_mapping","text":"tax_dat Dataframe; taxonomic database DWC format. on_fail Character vector length 1, either \"error\" \"summary\". Describes check fails. Default \"error\". on_success Character vector length 1, either \"logical\" \"data\". Describes check passes. Default \"data\". col_select Character vector length 1; name column (DWC term) check. Default \"acceptedNameUsageID\". quiet Logical vector length 1; warnings silenced? Default FALSE.","code":""},{"path":"https://joelnitta.github.io/dwctaxon/reference/dct_check_mapping.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check mapping of usage taxonomic IDs — dct_check_mapping","text":"Depends result check values on_fail on_success: check passes on_success \"logical\", return TRUE check passes on_success \"data\", return input dataframe check fails on_fail \"error\", return error check fails on_fail \"summary\", issue warning return dataframe summary reasons failure","code":""},{"path":"https://joelnitta.github.io/dwctaxon/reference/dct_check_mapping.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check mapping of usage taxonomic IDs — dct_check_mapping","text":"following rules enforced: Value taxonID may identical selected column within single row (words, name accepted name, parent taxon, basionym). Every value selected column must corresponding taxonID. col_select can take one following values: \"acceptedNameUsageID\": taxonID corresponding accepted name (synonym). \"parentNameUsageID\": taxonID corresponding immediate parent taxon name (example, species, genus). \"originalNameUsageID\": taxonID corresponding basionym name.","code":""},{"path":"https://joelnitta.github.io/dwctaxon/reference/dct_check_mapping.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check mapping of usage taxonomic IDs — dct_check_mapping","text":"","code":"# The bad data has an acceptedNameUsageID (third row, \"4\") that lacks a # corresponding taxonID bad_dat <- tibble::tribble(   ~taxonID, ~acceptedNameUsageID, ~taxonomicStatus, ~scientificName,   \"1\", NA, \"accepted\", \"Species foo\",   \"2\", \"1\", \"synonym\", \"Species bar\",   \"3\", \"4\", \"synonym\", \"Species bat\" )  dct_check_mapping(bad_dat, on_fail = \"summary\", quiet = TRUE) #> # A tibble: 1 × 5 #>   taxonID acceptedNameUsageID scientificName error                         check #>   <chr>   <chr>               <chr>          <glue>                        <chr> #> 1 3       4                   Species bat    taxonID detected whose accep… chec…"},{"path":"https://joelnitta.github.io/dwctaxon/reference/dct_check_sci_name.html","id":null,"dir":"Reference","previous_headings":"","what":"Check scientificName — dct_check_sci_name","title":"Check scientificName — dct_check_sci_name","text":"Check correctly formatted scientificName column Darwin Core taxonomic data.","code":""},{"path":"https://joelnitta.github.io/dwctaxon/reference/dct_check_sci_name.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check scientificName — dct_check_sci_name","text":"","code":"dct_check_sci_name(   tax_dat,   on_fail = dct_options()$on_fail,   on_success = dct_options()$on_success,   quiet = dct_options()$quiet )"},{"path":"https://joelnitta.github.io/dwctaxon/reference/dct_check_sci_name.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check scientificName — dct_check_sci_name","text":"tax_dat Dataframe; taxonomic database DWC format. on_fail Character vector length 1, either \"error\" \"summary\". Describes check fails. Default \"error\". on_success Character vector length 1, either \"logical\" \"data\". Describes check passes. Default \"data\". quiet Logical vector length 1; warnings silenced? Default FALSE.","code":""},{"path":"https://joelnitta.github.io/dwctaxon/reference/dct_check_sci_name.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check scientificName — dct_check_sci_name","text":"Depends result check values on_fail on_success: check passes on_success \"logical\", return TRUE check passes on_success \"data\", return input dataframe check fails on_fail \"error\", return error check fails on_fail \"summary\", issue warning return dataframe summary reasons failure","code":""},{"path":"https://joelnitta.github.io/dwctaxon/reference/dct_check_sci_name.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check scientificName — dct_check_sci_name","text":"following rules enforced: scientificName may missing (NA) scientificName must unique","code":""},{"path":"https://joelnitta.github.io/dwctaxon/reference/dct_check_sci_name.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check scientificName — dct_check_sci_name","text":"","code":"dct_check_sci_name(   data.frame(scientificName = NA_character_),   on_fail = \"summary\", quiet = TRUE ) #> # A tibble: 1 × 3 #>   scientificName check          error                                      #>   <chr>          <chr>          <chr>                                      #> 1 NA             check_sci_name scientificName detected with missing value  dct_check_sci_name(data.frame(scientificName = \"a\")) #>   scientificName #> 1              a"},{"path":"https://joelnitta.github.io/dwctaxon/reference/dct_check_tax_status.html","id":null,"dir":"Reference","previous_headings":"","what":"Check that taxonomicStatus is within valid values in\nDarwin Core taxonomic data — dct_check_tax_status","title":"Check that taxonomicStatus is within valid values in\nDarwin Core taxonomic data — dct_check_tax_status","text":"Check taxonomicStatus within valid values Darwin Core taxonomic data","code":""},{"path":"https://joelnitta.github.io/dwctaxon/reference/dct_check_tax_status.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check that taxonomicStatus is within valid values in\nDarwin Core taxonomic data — dct_check_tax_status","text":"","code":"dct_check_tax_status(   tax_dat,   on_fail = dct_options()$on_fail,   on_success = dct_options()$on_success,   valid_tax_status = dct_options()$valid_tax_status,   quiet = dct_options()$quiet )"},{"path":"https://joelnitta.github.io/dwctaxon/reference/dct_check_tax_status.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check that taxonomicStatus is within valid values in\nDarwin Core taxonomic data — dct_check_tax_status","text":"tax_dat Dataframe; taxonomic database DWC format. on_fail Character vector length 1, either \"error\" \"summary\". Describes check fails. Default \"error\". on_success Character vector length 1, either \"logical\" \"data\". Describes check passes. Default \"data\". valid_tax_status Character vector length 1; valid values taxonomicStatus. value must separated comma. Default accepted, synonym, variant, NA. \"NA\" indicates missing (NA) values valid. Case-sensitive. (see Examples). quiet Logical vector length 1; warnings silenced? Default FALSE.","code":""},{"path":"https://joelnitta.github.io/dwctaxon/reference/dct_check_tax_status.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check that taxonomicStatus is within valid values in\nDarwin Core taxonomic data — dct_check_tax_status","text":"Depends result check values on_fail on_success: check passes on_success \"logical\", return TRUE check passes on_success \"data\", return input dataframe check fails on_fail \"error\", return error check fails on_fail \"summary\", issue warning return dataframe summary reasons failure","code":""},{"path":"https://joelnitta.github.io/dwctaxon/reference/dct_check_tax_status.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Check that taxonomicStatus is within valid values in\nDarwin Core taxonomic data — dct_check_tax_status","text":"https://dwc.tdwg.org/terms/#dwc:taxonomicStatus","code":""},{"path":"https://joelnitta.github.io/dwctaxon/reference/dct_check_tax_status.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check that taxonomicStatus is within valid values in\nDarwin Core taxonomic data — dct_check_tax_status","text":"","code":"# The bad data has an taxonomicStatus (third row, \"foo\") that is not # a valid value bad_dat <- tibble::tribble(   ~taxonID, ~acceptedNameUsageID, ~taxonomicStatus, ~scientificName,   \"1\", NA, \"accepted\", \"Species foo\",   \"2\", \"1\", \"synonym\", \"Species bar\",   \"3\", NA, \"foo\", \"Species bat\" )  dct_check_tax_status(bad_dat, on_fail = \"summary\", quiet = TRUE) #> # A tibble: 1 × 5 #>   taxonID scientificName taxonomicStatus error                             check #>   <chr>   <chr>          <chr>           <chr>                             <chr> #> 1 3       Species bat    foo             taxonID detected whose taxonomic… chec…  # Example of setting valid values of taxonomicStatus via dct_options() dct_options(valid_tax_status = \"provisionally accepted, synonym, NA\") tibble::tribble(   ~taxonID, ~acceptedNameUsageID, ~taxonomicStatus, ~scientificName,   \"1\", NA, \"provisionally accepted\", \"Species foo\",   \"2\", \"1\", \"synonym\", \"Species bar\",   \"3\", NA, NA, \"Strange name\" ) |>   dct_check_tax_status() #> # A tibble: 3 × 4 #>   taxonID acceptedNameUsageID taxonomicStatus        scientificName #>   <chr>   <chr>               <chr>                  <chr>          #> 1 1       NA                  provisionally accepted Species foo    #> 2 2       1                   synonym                Species bar    #> 3 3       NA                  NA                     Strange name    # Reset options to defaults dct_options(reset = TRUE)"},{"path":"https://joelnitta.github.io/dwctaxon/reference/dct_check_taxon_id.html","id":null,"dir":"Reference","previous_headings":"","what":"Check taxonID — dct_check_taxon_id","title":"Check taxonID — dct_check_taxon_id","text":"Check correctly formatted taxonID column Darwin Core taxonomic data.","code":""},{"path":"https://joelnitta.github.io/dwctaxon/reference/dct_check_taxon_id.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check taxonID — dct_check_taxon_id","text":"","code":"dct_check_taxon_id(   tax_dat,   on_fail = dct_options()$on_fail,   on_success = dct_options()$on_success,   quiet = dct_options()$quiet )"},{"path":"https://joelnitta.github.io/dwctaxon/reference/dct_check_taxon_id.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check taxonID — dct_check_taxon_id","text":"tax_dat Dataframe; taxonomic database DWC format. on_fail Character vector length 1, either \"error\" \"summary\". Describes check fails. Default \"error\". on_success Character vector length 1, either \"logical\" \"data\". Describes check passes. Default \"data\". quiet Logical vector length 1; warnings silenced? Default FALSE.","code":""},{"path":"https://joelnitta.github.io/dwctaxon/reference/dct_check_taxon_id.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check taxonID — dct_check_taxon_id","text":"Depends result check values on_fail on_success: check passes on_success \"logical\", return TRUE check passes on_success \"data\", return input dataframe check fails on_fail \"error\", return error check fails on_fail \"summary\", issue warning return dataframe summary reasons failure","code":""},{"path":"https://joelnitta.github.io/dwctaxon/reference/dct_check_taxon_id.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check taxonID — dct_check_taxon_id","text":"following rules enforced: taxonID may missing (NA) taxonID must unique","code":""},{"path":"https://joelnitta.github.io/dwctaxon/reference/dct_check_taxon_id.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check taxonID — dct_check_taxon_id","text":"","code":"dct_check_taxon_id(   data.frame(taxonID = NA_character_),   on_fail = \"summary\", quiet = TRUE ) #> # A tibble: 1 × 3 #>   taxonID error                               check          #>   <chr>   <chr>                               <chr>          #> 1 NA      taxonID detected with missing value check_taxon_id dct_check_taxon_id(data.frame(taxonID = 1)) #>   taxonID #> 1       1"},{"path":"https://joelnitta.github.io/dwctaxon/reference/dct_fill_col.html","id":null,"dir":"Reference","previous_headings":"","what":"Fill a column of a taxonomic database — dct_fill_col","title":"Fill a column of a taxonomic database — dct_fill_col","text":"Fill column taxonomic database Darwin Core (DWC) format.","code":""},{"path":"https://joelnitta.github.io/dwctaxon/reference/dct_fill_col.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fill a column of a taxonomic database — dct_fill_col","text":"","code":"dct_fill_col(   tax_dat,   fill_to = \"acceptedNameUsage\",   fill_from = \"scientificName\",   match_to = \"taxonID\",   match_from = \"acceptedNameUsageID\" )"},{"path":"https://joelnitta.github.io/dwctaxon/reference/dct_fill_col.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fill a column of a taxonomic database — dct_fill_col","text":"tax_dat Dataframe; taxonomic database DWC format. fill_to Character vector length 1; name column fill. fill_from Character vector length 1; name column copy values filling. match_to Character vector length 1; name column match . match_from Character vector length 1; name column match .","code":""},{"path":"https://joelnitta.github.io/dwctaxon/reference/dct_fill_col.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fill a column of a taxonomic database — dct_fill_col","text":"Dataframe; taxonomic database DWC format.","code":""},{"path":"https://joelnitta.github.io/dwctaxon/reference/dct_fill_col.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fill a column of a taxonomic database — dct_fill_col","text":"Several terms (columns) DWC format come pairs \"term\" \"termID\"; example, \"acceptedNameUsage\" \"acceptedNameUsageID\", first value human-readable form (case, scientific name accepted taxon) second value used machine (case, taxonID accepted taxon). pairs include \"parentNameUsage\" \"parentNameUsageID\", \"scientificName\" \"scientificNameID\", etc. None required used given DWC dataset. Often updating data, user may fill one value (e.g., \"acceptedNameUsage\" \"acceptedNameUsageID\"), . purpose dct_fill_col() fill missing column. match_from match_to used locate values used filling cell. values match_to column must unique. default settings fill acceptedNameUsage values scientificName matching acceptedNameUsageID taxonID (see Example).","code":""},{"path":"https://joelnitta.github.io/dwctaxon/reference/dct_fill_col.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fill a column of a taxonomic database — dct_fill_col","text":"","code":"# Fill acceptedNameUsage with values from scientificName by # matching acceptedNameUsageID to taxonID (head(dct_filmies, 5)) |>   dct_fill_col(     fill_to = \"acceptedNameUsage\",     fill_from = \"scientificName\",     match_to = \"taxonID\",     match_from = \"acceptedNameUsageID\"   ) #> # A tibble: 5 × 6 #>   taxonID  acceptedNameUsageID taxonomicStatus taxonRank scientificName  accep…¹ #>   <chr>    <chr>               <chr>           <chr>     <chr>           <chr>   #> 1 54115096 NA                  accepted        species   Cephalomanes a… NA      #> 2 54133783 54115097            synonym         species   Trichomanes cr… Cephal… #> 3 54115097 NA                  accepted        species   Cephalomanes c… NA      #> 4 54133784 54115098            synonym         species   Trichomanes de… Cephal… #> 5 54115098 NA                  accepted        species   Cephalomanes d… NA      #> # … with abbreviated variable name ¹​acceptedNameUsage"},{"path":"https://joelnitta.github.io/dwctaxon/reference/dct_filmies.html","id":null,"dir":"Reference","previous_headings":"","what":"Taxonomic data of filmy ferns — dct_filmies","title":"Taxonomic data of filmy ferns — dct_filmies","text":"Taxonomic data filmy ferns (family Hymenophyllaceae) Darwin Core format. Non-ASCII characters converted ASCII, author names may expected. Meant demonstration purposes , formal data analysis.","code":""},{"path":"https://joelnitta.github.io/dwctaxon/reference/dct_filmies.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Taxonomic data of filmy ferns — dct_filmies","text":"","code":"dct_filmies"},{"path":"https://joelnitta.github.io/dwctaxon/reference/dct_filmies.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Taxonomic data of filmy ferns — dct_filmies","text":"Dataframe (tibble), 2451 rows 5 columns. details data format, see https://dwc.tdwg.org/terms/#taxon.","code":""},{"path":"https://joelnitta.github.io/dwctaxon/reference/dct_filmies.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Taxonomic data of filmy ferns — dct_filmies","text":"https://dwc.tdwg.org/terms/#taxon","code":""},{"path":"https://joelnitta.github.io/dwctaxon/reference/dct_filmies.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Taxonomic data of filmy ferns — dct_filmies","text":"Modified data downloaded Catalog Life Creative Commons Attribution (CC ) 4.0 license.","code":""},{"path":"https://joelnitta.github.io/dwctaxon/reference/dct_modify_row.html","id":null,"dir":"Reference","previous_headings":"","what":"Modify row(s) of a taxonomic database — dct_modify_row","title":"Modify row(s) of a taxonomic database — dct_modify_row","text":"Modify one rows taxonomic database Darwin Core (DWC) format.","code":""},{"path":"https://joelnitta.github.io/dwctaxon/reference/dct_modify_row.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Modify row(s) of a taxonomic database — dct_modify_row","text":"","code":"dct_modify_row(   tax_dat,   taxon_id = NULL,   sci_name = NULL,   tax_status = NULL,   usage_id = NULL,   usage_name = NULL,   clear_usage_id = dct_options()$clear_usage_id,   clear_usage_name = dct_options()$clear_usage_name,   fill_usage_name = dct_options()$fill_usage_name,   remap_names = dct_options()$remap_names,   remap_variant = dct_options()$remap_variant,   stamp_modified = dct_options()$stamp_modified,   strict = dct_options()$strict,   quiet = dct_options()$quiet,   args_tbl = NULL,   ... )"},{"path":"https://joelnitta.github.io/dwctaxon/reference/dct_modify_row.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Modify row(s) of a taxonomic database — dct_modify_row","text":"tax_dat Dataframe; taxonomic database DWC format. taxon_id Character numeric vector length 1; taxonID row modified (selected row). Can also use taxonID. sci_name Character vector length 1; scientificName row modified taxon_id NULL, scientificName assign selected row taxon_id provided (see Details). Can also use scientificName. tax_status Character vector length 1; taxonomicStatus assign selected row. Can also use taxonomicStatus. usage_id Character numeric vector length 1; acceptedNameUsageID assign selected row. Can also use acceptedNameUsageID usage_name Character vector length 1; acceptedNameUsage assign selected row. Can also use acceptedNameUsage. clear_usage_id Logical vector length 1; acceptedNameUsageID selected row set NA word \"accepted\" detected tax_status (case-sensitive)? Default TRUE. clear_usage_name Logical vector length 1; acceptedNameUsageID selected row set NA word \"accepted\" detected tax_status (case-sensitive)? Default TRUE. fill_usage_name Logical vector length 1; acceptedNameUsage selected row set scientificName corresponding acceptedNameUsageID? Default TRUE. remap_names Logical vector length 1; acceptedNameUsageID updated (remapped) rows acceptedNameUsageID taxonID row modified? Default TRUE. remap_variant remap_names, applies specifically rows taxonomicStatus \"variant\". Default FALSE. stamp_modified Logical vector length 1; modified column newly created modified row include timestamp date time creation/modification? Default TRUE. strict Logical vector length 1; taxonomic checks run updated taxonomic database? Default FALSE.. quiet Logical vector length 1; warnings silenced? Default FALSE.. args_tbl dataframe including columns corresponding one arguments, except tax_dat. case, input taxonomic database modified sequentially row input args_tbl. DWC terms can also included additional columns, similar using ... modify single row. ... DWC terms modify, specified sets named values. element vector must name corresponding valid DWC term; see dct_terms.","code":""},{"path":"https://joelnitta.github.io/dwctaxon/reference/dct_modify_row.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Modify row(s) of a taxonomic database — dct_modify_row","text":"Dataframe; taxonomic database DWC format","code":""},{"path":"https://joelnitta.github.io/dwctaxon/reference/dct_modify_row.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Modify row(s) of a taxonomic database — dct_modify_row","text":"Arguments taxon_id, sci_name, tax_status, usage_id, usage_name provided convenience avoid typing longer \"taxonomicID\", \"scientificName\", \"taxonomicStatus\", \"acceptedNameUsageID\", \"acceptedNameUsage\", respectively, latter may used instead. taxon_id used identify row(s) modify modified. sci_name can used way taxon_id provided (long sci_name matches single row). taxon_id sci_name provided, sci_name assigned scientificName row identified taxon_id, replacing value already exists. usage_id usage_name must match existing values acceptedNameUsageID acceptedNameUsage input data (tax_dat). default settings, either can used filled automatically (fill_usage_id fill_usage_name TRUE). tax_status arguments provided DWC terms assigned selected row (.e., modify row). remap_names TRUE (default) usage_id (.e., acceptedNameUsageID) provided, names acceptedNameUsageID matching taxonID selected row (.e., synonyms row) also acceptedNameUsageID replaced new acceptedNameUsageID. behavior applied names taxonomicStatus \"variant\" default, can turned names remap_variant. clear_usage_id clear_usage_name TRUE tax_status (taxonomicStatus) includes word \"accepted\", acceptedNameUsageID acceptedNameUsage set NA respectively, regardless values usage_id, usage_name, fill_usage_name. Can either modify single row input taxonomic database argument supplied vector length 1, can apply set changes taxonomic database input supplied dataframe via args_tbl.","code":""},{"path":"https://joelnitta.github.io/dwctaxon/reference/dct_modify_row.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Modify row(s) of a taxonomic database — dct_modify_row","text":"","code":"# Swap the accepted / synonym status of # Cephalomanes crassum (Copel.) M. G. Price # and Trichomanes crassum Copel. dct_filmies |>   dct_modify_row(     sci_name = \"Cephalomanes crassum (Copel.) M. G. Price\",     tax_status = \"synonym\",     usage_name = \"Trichomanes crassum Copel.\"   ) |>   dct_modify_row(     sci_name = \"Trichomanes crassum Copel.\",     tax_status = \"accepted\"   ) |>   dct_validate(     check_tax_status = FALSE,     check_mapping_accepted_status = FALSE,     check_sci_name = FALSE   ) #> # A tibble: 2,451 × 6 #>    taxonID  acceptedNameUsageID taxonomicStatus taxonRank scientificName modif…¹ #>    <chr>    <chr>               <chr>           <chr>     <chr>          <chr>   #>  1 54115096 NA                  accepted        species   Cephalomanes … NA      #>  2 54133783 NA                  accepted        species   Trichomanes c… 2023-0… #>  3 54115097 54133783            synonym         species   Cephalomanes … 2023-0… #>  4 54133784 54115098            synonym         species   Trichomanes d… NA      #>  5 54115098 NA                  accepted        species   Cephalomanes … NA      #>  6 54133786 54115100            synonym         species   Cephalomanes … NA      #>  7 54133787 54115100            synonym         species   Cephalomanes … NA      #>  8 54133788 54115100            synonym         species   Cephalomanes … NA      #>  9 54133789 54115100            synonym         species   Cephalomanes … NA      #> 10 54133790 54115100            synonym         species   Lacostea java… NA      #> # … with 2,441 more rows, and abbreviated variable name ¹​modified # Sometimes changing one name will affect others, if they map # to the new synonym dct_modify_row(   tax_dat = dct_filmies |> head(),   sci_name = \"Cephalomanes crassum (Copel.) M. G. Price\",   tax_status = \"synonym\",   usage_name = \"Cephalomanes densinervium (Copel.) Copel.\" ) #> # A tibble: 6 × 6 #>   taxonID  acceptedNameUsageID taxonomicStatus taxonRank scientificName  modif…¹ #>   <chr>    <chr>               <chr>           <chr>     <chr>           <chr>   #> 1 54115096 NA                  accepted        species   Cephalomanes a… NA      #> 2 54133783 54115098            synonym         species   Trichomanes cr… 2023-0… #> 3 54115097 54115098            synonym         species   Cephalomanes c… 2023-0… #> 4 54133784 54115098            synonym         species   Trichomanes de… NA      #> 5 54115098 NA                  accepted        species   Cephalomanes d… NA      #> 6 54133786 54115100            synonym         species   Cephalomanes c… NA      #> # … with abbreviated variable name ¹​modified # Apply a set of changes library(tibble) updates <- tibble(   sci_name = c(     \"Cephalomanes atrovirens Presl\",     \"Cephalomanes crassum (Copel.) M. G. Price\"   ),   tax_status = \"synonym\",   usage_name = \"Trichomanes crassum Copel.\" ) dct_filmies |>   dct_modify_row(args_tbl = updates) |>   dct_modify_row(     sci_name = \"Trichomanes crassum Copel.\",     tax_status = \"accepted\"   ) #> # A tibble: 2,451 × 6 #>    taxonID  acceptedNameUsageID taxonomicStatus taxonRank scientificName modif…¹ #>    <chr>    <chr>               <chr>           <chr>     <chr>          <chr>   #>  1 54115096 54133783            synonym         species   Cephalomanes … NA      #>  2 54133783 NA                  accepted        species   Trichomanes c… 2023-0… #>  3 54115097 54133783            synonym         species   Cephalomanes … NA      #>  4 54133784 54115098            synonym         species   Trichomanes d… NA      #>  5 54115098 NA                  accepted        species   Cephalomanes … NA      #>  6 54133786 54115100            synonym         species   Cephalomanes … NA      #>  7 54133787 54115100            synonym         species   Cephalomanes … NA      #>  8 54133788 54115100            synonym         species   Cephalomanes … NA      #>  9 54133789 54115100            synonym         species   Cephalomanes … NA      #> 10 54133790 54115100            synonym         species   Lacostea java… NA      #> # … with 2,441 more rows, and abbreviated variable name ¹​modified"},{"path":"https://joelnitta.github.io/dwctaxon/reference/dct_options.html","id":null,"dir":"Reference","previous_headings":"","what":"Get and set function arguments via options — dct_options","title":"Get and set function arguments via options — dct_options","text":"Changes default values function arguments.","code":""},{"path":"https://joelnitta.github.io/dwctaxon/reference/dct_options.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get and set function arguments via options — dct_options","text":"","code":"dct_options(reset = FALSE, ...)"},{"path":"https://joelnitta.github.io/dwctaxon/reference/dct_options.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get and set function arguments via options — dct_options","text":"reset Logical vector length 1; TRUE, reset options default values. ... number argument = value pairs, left side name argument right side value. See Details Examples.","code":""},{"path":"https://joelnitta.github.io/dwctaxon/reference/dct_options.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get and set function arguments via options — dct_options","text":"Nothing; used side-effect.","code":""},{"path":"https://joelnitta.github.io/dwctaxon/reference/dct_options.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get and set function arguments via options — dct_options","text":"Use change default values function arguments. way, type thing time call function. arguments can set function follows:","code":""},{"path":"https://joelnitta.github.io/dwctaxon/reference/dct_options.html","id":"validation-arguments","dir":"Reference","previous_headings":"","what":"Validation arguments","title":"Get and set function arguments via options — dct_options","text":"check_taxon_id: Logical vector length 1; instances  taxonID required non-missing unique? Default TRUE. check_tax_status: Logical vector length 1; taxonomic names required valid value taxonomic status (default, \"accepted\", \"synonym\", \"variant\")? Default TRUE. check_mapping_accepted: Logical vector length 1; values acceptedNameUsageID required map taxonID existing name? Default TRUE. check_mapping_parent: Logical vector length 1; values parentNameUsageID required map taxonID existing name? Default TRUE. check_mapping_original: Logical vector length 1; values originalNameUsageID required map taxonID existing name? Default TRUE. check_mapping_accepted_status: Logical vector length 1; rules mapping variants synonyms enforced? Default FALSE. (See dct_validate()). check_sci_name: Logical vector length 1; instances scientificName required non-missing unique? Default TRUE. check_status_diff: Logical vector length 1; scientific name allowed one taxonomic status? Default FALSE. check_col_names: Logical vector length 1; column names required valid Darwin Core term? Default TRUE. valid_tax_status: Character vector length 1; valid values taxonomicStatus. value must separated comma. Default accepted, synonym, variant, NA. \"NA\" indicates missing (NA) values valid. Case-sensitive. skip_missing_cols: Logical vector length 1; checks silently skipped columns inspect missing? Default FALSE. on_success: Character vector length 1, either \"logical\" \"data\". Describes check passes. Default \"data\". on_fail: Character vector length 1, either \"error\" \"summary\". Describes check fails. Default \"error\".","code":""},{"path":"https://joelnitta.github.io/dwctaxon/reference/dct_options.html","id":"editing-arguments","dir":"Reference","previous_headings":"","what":"Editing arguments","title":"Get and set function arguments via options — dct_options","text":"fill_taxon_id: Logical vector length 1; taxon_id provided, values taxonID column filled looking scientificName? Default TRUE. fill_usage_id: Logical vector length 1; usage_id provided, values acceptedNameUsageID column filled matching acceptedNameUsage scientificName? Default TRUE. clear_usage_id: Logical vector length 1; acceptedNameUsageID selected row set NA word \"accepted\" detected tax_status (case-sensitive)? Default TRUE. clear_usage_name: Logical vector length 1; acceptedNameUsage selected row set NA word \"accepted\" detected tax_status (case-sensitive)? Default TRUE. fill_usage_name: Logical vector length 1; acceptedNameUsage selected row set scientificName corresponding acceptedNameUsageID? Default TRUE. remap_names: Logical vector length 1; acceptedNameUsageID updated (remapped) rows acceptedNameUsageID taxonID row modified? Default TRUE. remap_variant: remap_names, applies specifically rows taxonomicStatus \"variant\". Default FALSE. stamp_modified: Logical vector length 1; modified column newly created modified row include timestamp date time creation/modification? Default TRUE.","code":""},{"path":"https://joelnitta.github.io/dwctaxon/reference/dct_options.html","id":"general-arguments","dir":"Reference","previous_headings":"","what":"General arguments","title":"Get and set function arguments via options — dct_options","text":"strict: Logical vector length 1; taxonomic checks run updated taxonomic database? Default FALSE. quiet: Logical vector length 1; warnings silenced? Default FALSE.","code":""},{"path":"https://joelnitta.github.io/dwctaxon/reference/dct_options.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get and set function arguments via options — dct_options","text":"","code":"# Show all options dct_options() #> $check_taxon_id #> [1] TRUE #>  #> $check_tax_status #> [1] TRUE #>  #> $check_mapping_accepted #> [1] TRUE #>  #> $check_mapping_parent #> [1] TRUE #>  #> $check_mapping_original #> [1] TRUE #>  #> $check_mapping_accepted_status #> [1] FALSE #>  #> $check_sci_name #> [1] TRUE #>  #> $check_status_diff #> [1] FALSE #>  #> $check_col_names #> [1] TRUE #>  #> $valid_tax_status #> [1] \"accepted, synonym, variant, NA\" #>  #> $skip_missing_cols #> [1] FALSE #>  #> $on_success #> [1] \"data\" #>  #> $on_fail #> [1] \"error\" #>  #> $fill_taxon_id #> [1] TRUE #>  #> $fill_usage_id #> [1] TRUE #>  #> $clear_usage_id #> [1] TRUE #>  #> $clear_usage_name #> [1] TRUE #>  #> $fill_usage_name #> [1] TRUE #>  #> $remap_names #> [1] TRUE #>  #> $remap_variant #> [1] FALSE #>  #> $stamp_modified #> [1] TRUE #>  #> $strict #> [1] FALSE #>  #> $quiet #> [1] FALSE #>   # View one option dct_options()$valid_tax_status #> [1] \"accepted, synonym, variant, NA\"  # Change one option dct_options(valid_tax_status = \"accepted, weird, whatever\") dct_options()$valid_tax_status #> [1] \"accepted, weird, whatever\"  # Reset to default values dct_options(reset = TRUE) dct_options()$valid_tax_status #> [1] \"accepted, synonym, variant, NA\"  # Multiple options may also be set at once dct_options(check_taxon_id = FALSE, check_status_diff = TRUE)  dct_options(reset = TRUE)"},{"path":"https://joelnitta.github.io/dwctaxon/reference/dct_terms.html","id":null,"dir":"Reference","previous_headings":"","what":"Darwin Core Taxon terms — dct_terms","title":"Darwin Core Taxon terms — dct_terms","text":"table valid Darwin Core terms. terms Taxon class record-level included.","code":""},{"path":"https://joelnitta.github.io/dwctaxon/reference/dct_terms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Darwin Core Taxon terms — dct_terms","text":"","code":"dct_terms"},{"path":"https://joelnitta.github.io/dwctaxon/reference/dct_terms.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Darwin Core Taxon terms — dct_terms","text":"Dataframe (tibble), including two columns: group: Darwin Core term group; either \"taxon\" (terms Taxon class) \"record-level\" (terms generic might apply type record dataset.) term: Darwin Core term two additional attributes: retrieved: Date terms obtained url: URL terms obtained","code":""},{"path":"https://joelnitta.github.io/dwctaxon/reference/dct_terms.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Darwin Core Taxon terms — dct_terms","text":"https://dwc.tdwg.org/terms/#taxon","code":""},{"path":"https://joelnitta.github.io/dwctaxon/reference/dct_validate.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate a taxonomic database — dct_validate","title":"Validate a taxonomic database — dct_validate","text":"Runs series automated checks taxonomic database Darwin Core (DWC) format.","code":""},{"path":"https://joelnitta.github.io/dwctaxon/reference/dct_validate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate a taxonomic database — dct_validate","text":"","code":"dct_validate(   tax_dat,   check_taxon_id = dct_options()$check_taxon_id,   check_tax_status = dct_options()$check_tax_status,   check_mapping_accepted = dct_options()$check_mapping_accepted,   check_mapping_parent = dct_options()$check_mapping_parent,   check_mapping_original = dct_options()$check_mapping_original,   check_mapping_accepted_status = dct_options()$check_mapping_accepted_status,   check_sci_name = dct_options()$check_sci_name,   check_status_diff = dct_options()$check_status_diff,   check_col_names = dct_options()$check_col_names,   valid_tax_status = dct_options()$valid_tax_status,   on_success = dct_options()$on_success,   on_fail = dct_options()$on_fail,   skip_missing_cols = dct_options()$skip_missing_cols,   quiet = dct_options()$quiet )"},{"path":"https://joelnitta.github.io/dwctaxon/reference/dct_validate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate a taxonomic database — dct_validate","text":"tax_dat Dataframe; taxonomic database DWC format. check_taxon_id Logical vector length 1; instances  taxonID required non-missing unique? Default TRUE. check_tax_status Logical vector length 1; taxonomic names required valid value taxonomic status (default, \"accepted\", \"synonym\", \"variant\")? Default TRUE. check_mapping_accepted Logical vector length 1; values acceptedNameUsageID required map taxonID existing name? Default TRUE. check_mapping_parent Logical vector length 1; values parentNameUsageID required map taxonID existing name? Default TRUE. check_mapping_original Logical vector length 1; values originalNameUsageID required map taxonID existing name? Default TRUE. check_mapping_accepted_status Logical vector length 1; rules mapping variants synonyms enforced? Default FALSE. (see Details). check_sci_name Logical vector length 1; instances scientificName required non-missing unique? Default TRUE. check_status_diff Logical vector length 1; scientific name allowed one taxonomic status? Default FALSE. check_col_names Logical vector length 1; column names required valid Darwin Core term? Default TRUE. valid_tax_status Character vector length 1; valid values taxonomicStatus. value must separated comma. Default accepted, synonym, variant, NA. \"NA\" indicates missing (NA) values valid. Case-sensitive. on_success Character vector length 1, either \"logical\" \"data\". Describes check passes. Default \"data\". on_fail Character vector length 1, either \"error\" \"summary\". Describes check fails. Default \"error\". skip_missing_cols Logical vector length 1; checks silently skipped columns inspect missing? Default FALSE. quiet Logical vector length 1; warnings silenced? Default FALSE.","code":""},{"path":"https://joelnitta.github.io/dwctaxon/reference/dct_validate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate a taxonomic database — dct_validate","text":"Depends result check values on_fail on_success: check passes on_success \"logical\", return TRUE check passes on_success \"data\", return input dataframe check fails on_fail \"error\", return error check fails on_fail \"summary\", issue warning return dataframe summary reasons failure","code":""},{"path":"https://joelnitta.github.io/dwctaxon/reference/dct_validate.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Validate a taxonomic database — dct_validate","text":"check_mapping_accepted_status check_status_diff, \"accepted\", \"synonym\", \"variant\" determined string matching taxonomicStatus; \"provisionally accepted\" counted \"accepted\", \"ambiguous synonym\" counted \"synonym\", etc. (case-sensitive). check_mapping_accepted_status, following rules enforced: Rows taxonomicStatus \"synonym\" (synonyms) must acceptedNameUsageID matching taxonID accepted name (taxonomicStatus \"accepted\") Rows taxonomicStatus \"variant\" (orthographic variants) must acceptedNameUsageID matching taxonID accepted name synonym (another variant) Rows taxonomicStatus \"accepted\" must value entered acceptedNameUsageID Rows value acceptedNameUsageID must valid value taxonomicStatus. Default settings arguments can modified dct_options() (see Examples). columns expected vectors class character, checked columns. Columns (DWC terms) names including 'ID', example 'taxonID', may character, numeric, integer.","code":""},{"path":"https://joelnitta.github.io/dwctaxon/reference/dct_validate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Validate a taxonomic database — dct_validate","text":"","code":"# The example dataset dct_filmies is already correctly formatted and passes # validation dct_validate(dct_filmies) #> # A tibble: 2,451 × 5 #>    taxonID  acceptedNameUsageID taxonomicStatus taxonRank scientificName         #>    <chr>    <chr>               <chr>           <chr>     <chr>                  #>  1 54115096 NA                  accepted        species   Cephalomanes atrovire… #>  2 54133783 54115097            synonym         species   Trichomanes crassum C… #>  3 54115097 NA                  accepted        species   Cephalomanes crassum … #>  4 54133784 54115098            synonym         species   Trichomanes densinerv… #>  5 54115098 NA                  accepted        species   Cephalomanes densiner… #>  6 54133786 54115100            synonym         species   Cephalomanes curvatum… #>  7 54133787 54115100            synonym         species   Cephalomanes javanica… #>  8 54133788 54115100            synonym         species   Cephalomanes oblongif… #>  9 54133789 54115100            synonym         species   Cephalomanes zollinge… #> 10 54133790 54115100            synonym         species   Lacostea javanica (Bl… #> # … with 2,441 more rows  # So make some bad data on purpose with a duplicated scientific name bad_dat <- dct_filmies bad_dat$scientificName[1] <- bad_dat$scientificName[2]  # The incorrectly formatted data won't pass (example produces an error, so # not run by default) if (FALSE) {   dct_validate(bad_dat) }  # It will pass if we allow duplicated scientific names though dct_validate(bad_dat, check_sci_name = FALSE) #> # A tibble: 2,451 × 5 #>    taxonID  acceptedNameUsageID taxonomicStatus taxonRank scientificName         #>    <chr>    <chr>               <chr>           <chr>     <chr>                  #>  1 54115096 NA                  accepted        species   Trichomanes crassum C… #>  2 54133783 54115097            synonym         species   Trichomanes crassum C… #>  3 54115097 NA                  accepted        species   Cephalomanes crassum … #>  4 54133784 54115098            synonym         species   Trichomanes densinerv… #>  5 54115098 NA                  accepted        species   Cephalomanes densiner… #>  6 54133786 54115100            synonym         species   Cephalomanes curvatum… #>  7 54133787 54115100            synonym         species   Cephalomanes javanica… #>  8 54133788 54115100            synonym         species   Cephalomanes oblongif… #>  9 54133789 54115100            synonym         species   Cephalomanes zollinge… #> 10 54133790 54115100            synonym         species   Lacostea javanica (Bl… #> # … with 2,441 more rows  # Individual checks can also be turned or off with dct_options()  # Let's allow duplicated scientific names by default dct_options(check_sci_name = FALSE)  # The data passes validation as before, but we don't have to specify # `check_sci_name = FALSE` in the function call dct_validate(bad_dat) #> # A tibble: 2,451 × 5 #>    taxonID  acceptedNameUsageID taxonomicStatus taxonRank scientificName         #>    <chr>    <chr>               <chr>           <chr>     <chr>                  #>  1 54115096 NA                  accepted        species   Trichomanes crassum C… #>  2 54133783 54115097            synonym         species   Trichomanes crassum C… #>  3 54115097 NA                  accepted        species   Cephalomanes crassum … #>  4 54133784 54115098            synonym         species   Trichomanes densinerv… #>  5 54115098 NA                  accepted        species   Cephalomanes densiner… #>  6 54133786 54115100            synonym         species   Cephalomanes curvatum… #>  7 54133787 54115100            synonym         species   Cephalomanes javanica… #>  8 54133788 54115100            synonym         species   Cephalomanes oblongif… #>  9 54133789 54115100            synonym         species   Cephalomanes zollinge… #> 10 54133790 54115100            synonym         species   Lacostea javanica (Bl… #> # … with 2,441 more rows  # Reset options to their defaults dct_options(reset = TRUE)"}]
