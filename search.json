[{"path":"https://joelnitta.github.io/dwctaxon/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2021 dwctaxon authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://joelnitta.github.io/dwctaxon/articles/editing.html","id":"the-data","dir":"Articles","previous_headings":"","what":"The data","title":"Editing","text":"dwctaxon comes example dataset, taxonomic data filmy ferns (family Hymenophyllaceae). Let’s take quick look data: Although DWC taxon format includes large number terms (columns)1, typical database use . dct_filmies includes 5 columns. usage mostly clear someone familiar taxonomy, two columns need explanation. taxonID unique ID row (name), acceptedNameUsageID provided synonyms; indicates taxonID accepted name. information DWC taxon format, see vignette(\"--dwc\"). rest vignette consist modifying dataset.","code":"dct_filmies #> # A tibble: 2,451 × 5 #>    taxonID  acceptedNameUsageID taxonomicStatus taxonRank scientificName         #>    <chr>    <chr>               <chr>           <chr>     <chr>                  #>  1 54115096 NA                  accepted        species   Cephalomanes atrovire… #>  2 54133783 54115097            synonym         species   Trichomanes crassum C… #>  3 54115097 NA                  accepted        species   Cephalomanes crassum … #>  4 54133784 54115098            synonym         species   Trichomanes densinerv… #>  5 54115098 NA                  accepted        species   Cephalomanes densiner… #>  6 54133786 54115100            synonym         species   Cephalomanes curvatum… #>  7 54133787 54115100            synonym         species   Cephalomanes javanica… #>  8 54133788 54115100            synonym         species   Cephalomanes oblongif… #>  9 54133789 54115100            synonym         species   Cephalomanes zollinge… #> 10 54133790 54115100            synonym         species   Lacostea javanica (Bl… #> # … with 2,441 more rows"},{"path":"https://joelnitta.github.io/dwctaxon/articles/editing.html","id":"adding-rows","dir":"Articles","previous_headings":"","what":"Adding rows","title":"Editing","text":"(coming soon!)","code":""},{"path":"https://joelnitta.github.io/dwctaxon/articles/editing.html","id":"modifying-rows","dir":"Articles","previous_headings":"","what":"Modifying rows","title":"Editing","text":"(coming soon!)","code":""},{"path":"https://joelnitta.github.io/dwctaxon/articles/editing.html","id":"filling-columns","dir":"Articles","previous_headings":"","what":"Filling columns","title":"Editing","text":"(coming soon!)","code":""},{"path":"https://joelnitta.github.io/dwctaxon/articles/validation.html","id":"setup","dir":"Articles","previous_headings":"","what":"Setup","title":"Validation","text":"Start loading packages setting random number generator seed since vignette involves random samples.","code":"library(dwctaxon) library(tidyverse) # for tidy data wrangling  set.seed(12345)"},{"path":"https://joelnitta.github.io/dwctaxon/articles/validation.html","id":"the-data","dir":"Articles","previous_headings":"","what":"The data","title":"Validation","text":", use example dataset comes dwctaxon, dct_filmies: However, dct_filmies already well-formatted pass validation checks! lets introduce noise make things interesting. first rows may look , know data now problems. (rest coming soon!)","code":"dct_filmies #> # A tibble: 2,451 × 5 #>    taxonID  acceptedNameUsageID taxonomicStatus taxonRank scientificName         #>    <chr>    <chr>               <chr>           <chr>     <chr>                  #>  1 54115096 NA                  accepted        species   Cephalomanes atrovire… #>  2 54133783 54115097            synonym         species   Trichomanes crassum C… #>  3 54115097 NA                  accepted        species   Cephalomanes crassum … #>  4 54133784 54115098            synonym         species   Trichomanes densinerv… #>  5 54115098 NA                  accepted        species   Cephalomanes densiner… #>  6 54133786 54115100            synonym         species   Cephalomanes curvatum… #>  7 54133787 54115100            synonym         species   Cephalomanes javanica… #>  8 54133788 54115100            synonym         species   Cephalomanes oblongif… #>  9 54133789 54115100            synonym         species   Cephalomanes zollinge… #> 10 54133790 54115100            synonym         species   Lacostea javanica (Bl… #> # … with 2,441 more rows filmies_dirty <-   dct_filmies |>   # Duplicate some rows at the end   bind_rows(tail(dct_filmies)) |>   # Insert bad values for `acceptedNameUsageID` of 5 random rows   rows_update(     tibble(       taxonID = sample(dct_filmies$taxonID, 5),       acceptedNameUsageID = sample(letters, 5)     ),     by = \"taxonID\"   )  filmies_dirty #> # A tibble: 2,457 × 5 #>    taxonID  acceptedNameUsageID taxonomicStatus taxonRank scientificName         #>    <chr>    <chr>               <chr>           <chr>     <chr>                  #>  1 54115096 NA                  accepted        species   Cephalomanes atrovire… #>  2 54133783 54115097            synonym         species   Trichomanes crassum C… #>  3 54115097 NA                  accepted        species   Cephalomanes crassum … #>  4 54133784 54115098            synonym         species   Trichomanes densinerv… #>  5 54115098 NA                  accepted        species   Cephalomanes densiner… #>  6 54133786 54115100            synonym         species   Cephalomanes curvatum… #>  7 54133787 54115100            synonym         species   Cephalomanes javanica… #>  8 54133788 54115100            synonym         species   Cephalomanes oblongif… #>  9 54133789 54115100            synonym         species   Cephalomanes zollinge… #> 10 54133790 54115100            synonym         species   Lacostea javanica (Bl… #> # … with 2,447 more rows"},{"path":"https://joelnitta.github.io/dwctaxon/articles/what-is-dwc.html","id":"dwc-is-a-standard-for-biodiversity-data","dir":"Articles","previous_headings":"","what":"DWC is a standard for biodiversity data","title":"What is DWC?","text":"According official documentation, Darwin Core standard maintained Darwin Core Maintenance Interest Group. includes glossary terms (contexts might called properties, elements, fields, columns, attributes, concepts) intended facilitate sharing information biological diversity providing identifiers, labels, definitions. Darwin Core primarily based taxa, occurrence nature documented observations, specimens, samples, related information. (emphasis added) “terms” referred typically encountered columns rectangular data (spreadsheets), scientificName (scientific name taxon), lifeStage (life stage organism observed), etc. providing controlled vocabulary clear definitions terms, DWC greatly facilitates collection sharing biological data. example, Global Biodiversity Information Facility (GBIF), synthesizes biodiversity data global scale, uses DWC. practice, given set DWC data contained archive (zip file) including multiple spreadsheets (CSV files) XML files additional metadata. spreadsheets typically include datasets like occurrences, taxonomy, collection events. DWC archive components, https://gcube.wiki.gcube-system.org/gcube/Darwin_Core_Terms parts DWC organism occurrence data clearly important, scope dwctaxon, focuses taxonomic data.","code":""},{"path":"https://joelnitta.github.io/dwctaxon/articles/what-is-dwc.html","id":"features-of-the-dwc-taxon-format","dir":"Articles","previous_headings":"","what":"Features of the DWC taxon format","title":"What is DWC?","text":"terms used DWC format taxonomic data (“DWC taxon”) familiar biologists. simple example mapping taxonomic data left DWC terms right genus Sarda: Example terms DWC taxon, https://gcube.wiki.gcube-system.org/gcube/Darwin_Core_Terms However, peculiarities good familiar follows.","code":""},{"path":"https://joelnitta.github.io/dwctaxon/articles/what-is-dwc.html","id":"vertically-oriented","dir":"Articles","previous_headings":"Features of the DWC taxon format","what":"Vertically oriented","title":"What is DWC?","text":"Linnaean system taxonomy organizes taxa hierarchy, may used working taxonomic data “wide” format row species, like : Indeed, DWC taxon, higher taxonomic levels like genus, family, order valid terms may used. However, species valid DWC term. row DWC taxonomic database single scientific name rank, just species. typical data oriented vertically (“long” format): since genus, family, etc. valid DWC terms, can also included (applicable):","code":""},{"path":"https://joelnitta.github.io/dwctaxon/articles/what-is-dwc.html","id":"machine-and-human-friendly","dir":"Articles","previous_headings":"Features of the DWC taxon format","what":"Machine and human friendly","title":"What is DWC?","text":"browse DWC taxon terms, notice many pairs similar terms acceptedNameUsage acceptedNameUsageID, parentNameUsage parentNameUsageID, etc. used similar purposes, one value easy humans understand useful machines (computer programs). example, acceptedNameUsage accepted name synonym (e.g., Picea abies (L.) H. Karst accepted name Pinus abies L.), acceptedNameUsageID unique ID (typically, taxonID) accepted name (typically short sequence letters numbers, depends dataset). makes data format somewhat redundant, also easier human parse can see actual accepted name synonym immediately, instead look taxonID. hand, scientificName can include duplicates (rare cases name published twice, etc.), referring accepted name unique ID safer problem computer. can see works example dataset comes dwctaxon, dct_filmies: , Trichomanes crassum Copel. synonym Cephalomanes crassum (Copel.) M. G. Price (notice acceptedNameUsageID Trichomanes crassum Copel. matches taxonID Cephalomanes crassum (Copel.) M. G. Price). dataset, acceptedNameUsageID used, valid add column acceptedNameUsage. learn , please see vignette(\"editing\").","code":"library(dwctaxon) head(dct_filmies) #> # A tibble: 6 × 5 #>   taxonID  acceptedNameUsageID taxonomicStatus taxonRank scientificName                             #>   <chr>    <chr>               <chr>           <chr>     <chr>                                      #> 1 54115096 NA                  accepted        species   Cephalomanes atrovirens Presl              #> 2 54133783 54115097            synonym         species   Trichomanes crassum Copel.                 #> 3 54115097 NA                  accepted        species   Cephalomanes crassum (Copel.) M. G. Price  #> 4 54133784 54115098            synonym         species   Trichomanes densinervium Copel.            #> 5 54115098 NA                  accepted        species   Cephalomanes densinervium (Copel.) Copel.  #> 6 54133786 54115100            synonym         species   Cephalomanes curvatum (J. Sm.) V. D. Bosch"},{"path":"https://joelnitta.github.io/dwctaxon/articles/what-is-dwc.html","id":"extensible","dir":"Articles","previous_headings":"Features of the DWC taxon format","what":"Extensible","title":"What is DWC?","text":"many terms listed DWC taxon documentation – 37 count! However, unlikely given taxonomic database uses ; fact, ’ve encountered use subset terms, none strictly required. practice typically want least scientificName (scientific name taxon, including author known) taxonID (unique identifier row dataset). Furthermore, terms likely restricted vocabularies. example, given dataset may use limited set words describe taxonomicStatus like “accepted”, “synonym”, “doubtful”. contrast term (nearly) anything, like scientificName. DWC provide official set vocabularies; left database manager determine . One feature dwctaxon verify values want allow used given term. learn , please see vignette(\"validation\"). qualities make DWC taxon format flexible, can meet needs dataset hand. dwctaxon functions try provide sensible defaults, may need adjusted appropriately.","code":""},{"path":"https://joelnitta.github.io/dwctaxon/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Joel H. Nitta. Author, maintainer. Wataru Iwasaki. Contributor.","code":""},{"path":"https://joelnitta.github.io/dwctaxon/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Nitta Iwasaki (2022). dwctaxon R package working Darwin Core Taxon data. https://github.com/joelnitta/dwctaxon","code":"@Misc{,   title = {The dwctaxon R package for working with Darwin Core Taxon data},   author = {Joel H. Nitta and Wataru Iwasaki},   year = {2022},   url = {https://github.com/joelnitta/dwctaxon}, }"},{"path":"https://joelnitta.github.io/dwctaxon/index.html","id":"dwctaxon-","dir":"","previous_headings":"","what":"Tools for Working with Darwin Core Taxon Data in R","title":"Tools for Working with Darwin Core Taxon Data in R","text":"goal dwctaxon facilitate working Darwin Core Taxon data R. typical use-case dwctaxon create Darwin Core Taxon datasets scratch (although ), rather enable easy modification validation existing datasets. primary motivation validation dataset can used taxonomic name resolution, example taxastand R package.","code":""},{"path":"https://joelnitta.github.io/dwctaxon/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Tools for Working with Darwin Core Taxon Data in R","text":"dwctaxon can installed r-universe github. ","code":"install.packages(\"dwctaxon\", repos = 'https://joelnitta.r-universe.dev') # install.packages(\"remotes\") remotes::install_github(\"joelnitta/dwctaxon\")"},{"path":"https://joelnitta.github.io/dwctaxon/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Tools for Working with Darwin Core Taxon Data in R","text":"First, load packages dataset work : dct_filmies taxonomic dataset filmy ferns included dwctaxon. demonstration purposes, just use first five rows: functions dwctaxon start dct_.","code":"library(tibble) # recommended for pretty printing of tibbles library(dwctaxon)  dct_filmies #> # A tibble: 2,451 × 5 #>    taxonID  acceptedNameUsageID taxonomicStatus taxonRank scientificName                             #>    <chr>    <chr>               <chr>           <chr>     <chr>                                      #>  1 54115096 <NA>                accepted        species   Cephalomanes atrovirens Presl              #>  2 54133783 54115097            synonym         species   Trichomanes crassum Copel.                 #>  3 54115097 <NA>                accepted        species   Cephalomanes crassum (Copel.) M. G. Price  #>  4 54133784 54115098            synonym         species   Trichomanes densinervium Copel.            #>  5 54115098 <NA>                accepted        species   Cephalomanes densinervium (Copel.) Copel.  #>  6 54133786 54115100            synonym         species   Cephalomanes curvatum (J. Sm.) V. D. Bosch #>  7 54133787 54115100            synonym         species   Cephalomanes javanica (Bl.) V. D. Bosch    #>  8 54133788 54115100            synonym         species   Cephalomanes oblongifolium Presl           #>  9 54133789 54115100            synonym         species   Cephalomanes zollingeri V. D. Bosch        #> 10 54133790 54115100            synonym         species   Lacostea javanica (Bl.) Prantl             #> # … with 2,441 more rows filmies_small <- head(dct_filmies, 5)"},{"path":"https://joelnitta.github.io/dwctaxon/index.html","id":"edit-data","dir":"","previous_headings":"Usage","what":"Edit data","title":"Tools for Working with Darwin Core Taxon Data in R","text":"dct_add_row() adds one rows, automatically providing values taxonID. dct_modify_row() modifies row, automatically re-mapping synonyms needed. dct_fill_col() fills values columns “term” - “termID” pairs (e.g., acceptedNameUsage acceptedNameUsageID).","code":"filmies_small |>   dct_add_row(     sci_name = \"Hymenophyllum dwctaxonense Nitta\",     taxonomicStatus = \"accepted\"   ) #> # A tibble: 6 × 6 #>   taxonID  acceptedNameUsageID taxonomicStatus taxonRank scientificName                            modified            #>   <chr>    <chr>               <chr>           <chr>     <chr>                                     <chr>               #> 1 54115096 <NA>                accepted        species   Cephalomanes atrovirens Presl             <NA>                #> 2 54133783 54115097            synonym         species   Trichomanes crassum Copel.                <NA>                #> 3 54115097 <NA>                accepted        species   Cephalomanes crassum (Copel.) M. G. Price <NA>                #> 4 54133784 54115098            synonym         species   Trichomanes densinervium Copel.           <NA>                #> 5 54115098 <NA>                accepted        species   Cephalomanes densinervium (Copel.) Copel. <NA>                #> 6 193e2011 <NA>                accepted        <NA>      Hymenophyllum dwctaxonense Nitta          2022-11-16 16:14:36 # Change C. densinervium to a synonym of C. crassum filmies_small |>   dct_modify_row(     sci_name = \"Cephalomanes densinervium (Copel.) Copel.\",     tax_status = \"synonym\",     usage_name = \"Cephalomanes crassum (Copel.) M. G. Price\"   ) #> # A tibble: 5 × 6 #>   taxonID  acceptedNameUsageID taxonomicStatus taxonRank scientificName                            modified            #>   <chr>    <chr>               <chr>           <chr>     <chr>                                     <chr>               #> 1 54115096 <NA>                accepted        species   Cephalomanes atrovirens Presl             <NA>                #> 2 54133783 54115097            synonym         species   Trichomanes crassum Copel.                <NA>                #> 3 54115097 <NA>                accepted        species   Cephalomanes crassum (Copel.) M. G. Price <NA>                #> 4 54133784 54115097            synonym         species   Trichomanes densinervium Copel.           2022-11-16 16:14:36 #> 5 54115098 54115097            synonym         species   Cephalomanes densinervium (Copel.) Copel. 2022-11-16 16:14:36 # Fill-in the acceptedNameUsage column with scientific names filmies_small |>   dct_fill_col(     fill_to = \"acceptedNameUsage\",     fill_from = \"scientificName\",     match_to = \"taxonID\",     match_from = \"acceptedNameUsageID\"   ) #> # A tibble: 5 × 6 #>   taxonID  acceptedNameUsageID taxonomicStatus taxonRank scientificName                            acceptedNameUsage                         #>   <chr>    <chr>               <chr>           <chr>     <chr>                                     <chr>                                     #> 1 54115096 <NA>                accepted        species   Cephalomanes atrovirens Presl             <NA>                                      #> 2 54133783 54115097            synonym         species   Trichomanes crassum Copel.                Cephalomanes crassum (Copel.) M. G. Price #> 3 54115097 <NA>                accepted        species   Cephalomanes crassum (Copel.) M. G. Price <NA>                                      #> 4 54133784 54115098            synonym         species   Trichomanes densinervium Copel.           Cephalomanes densinervium (Copel.) Copel. #> 5 54115098 <NA>                accepted        species   Cephalomanes densinervium (Copel.) Copel. <NA>"},{"path":"https://joelnitta.github.io/dwctaxon/index.html","id":"validate-data","dir":"","previous_headings":"Usage","what":"Validate data","title":"Tools for Working with Darwin Core Taxon Data in R","text":"dct_validate() main function validation, automatically conducts series checks. individual checks can run dct_check_*() functions. dct_filmies dataset already well-formatted, pass validation: demonstration purposes, let’s mess data: default, dct_validate() stop error first check fails: may useful get overview checks failed. can done setting on_fail \"summary\":","code":"# Default behavior is to return the original dataset if checks pass # For this example, return TRUE instead dct_validate(dct_filmies, on_success = \"logical\") #> [1] TRUE # Start by duplicating some data filmies_dirty <- rbind(head(dct_filmies), head(dct_filmies, 2)) # Replace some values of `acceptedNameUsageID` with random letters filmies_dirty$acceptedNameUsageID[sample(1:8, 5)] <- sample(letters, 5) dct_validate(filmies_dirty) #> Error: check_taxon_id failed #>    taxonID detected with duplicated value #>    Bad taxonID: 54115096, 54133783 dct_validate(filmies_dirty, on_fail = \"summary\") #> Warning in dct_validate(filmies_dirty, on_fail = \"summary\"): check_mapping failed #> # A tibble: 14 × 5 #>    taxonID  acceptedNameUsageID scientificName                             error                                    check                #>    <chr>    <chr>               <chr>                                      <chr>                                    <chr>                #>  1 54115096 b                   Cephalomanes atrovirens Presl              taxonID detected whose acceptedNameUs... check_mapping        #>  2 54133783 k                   Trichomanes crassum Copel.                 taxonID detected whose acceptedNameUs... check_mapping        #>  3 54115097 s                   Cephalomanes crassum (Copel.) M. G. Price  taxonID detected whose acceptedNameUs... check_mapping        #>  4 54133786 n                   Cephalomanes curvatum (J. Sm.) V. D. Bosch taxonID detected whose acceptedNameUs... check_mapping        #>  5 54133783 p                   Trichomanes crassum Copel.                 taxonID detected whose acceptedNameUs... check_mapping        #>  6 54115096 <NA>                Cephalomanes atrovirens Presl              accepted name(s) detected with a non-... check_mapping_strict #>  7 54115097 <NA>                Cephalomanes crassum (Copel.) M. G. Price  accepted name(s) detected with a non-... check_mapping_strict #>  8 54133783 k                   Trichomanes crassum Copel.                 synonym detected whose acceptedNameUs... check_mapping_strict #>  9 54133786 n                   Cephalomanes curvatum (J. Sm.) V. D. Bosch synonym detected whose acceptedNameUs... check_mapping_strict #> 10 54133783 p                   Trichomanes crassum Copel.                 synonym detected whose acceptedNameUs... check_mapping_strict #> 11 <NA>     <NA>                Cephalomanes atrovirens Presl              scientificName detected with duplicat... check_sci_name       #> 12 <NA>     <NA>                Trichomanes crassum Copel.                 scientificName detected with duplicat... check_sci_name       #> 13 54115096 <NA>                <NA>                                       taxonID detected with duplicated value   check_taxon_id       #> 14 54133783 <NA>                <NA>                                       taxonID detected with duplicated value   check_taxon_id"},{"path":"https://joelnitta.github.io/dwctaxon/index.html","id":"piping","dir":"","previous_headings":"Usage","what":"Piping","title":"Tools for Working with Darwin Core Taxon Data in R","text":"functions dwctaxon take dataframe first argument return dataframe default, “pipe-friendly” can chained together: ’s often good idea include dct_validate() end chain make sure modified taxonomic database still correctly formatted.","code":"dct_filmies |>   dct_modify_row(     taxon_id = \"54133783\",     tax_status = \"accepted\"   ) |>   dct_add_row(     sci_name = \"Hymenophyllum dwctaxonense Nitta\",     taxonomicStatus = \"accepted\"   ) |>   dct_validate() #> # A tibble: 2,452 × 6 #>    taxonID  acceptedNameUsageID taxonomicStatus taxonRank scientificName                             modified            #>    <chr>    <chr>               <chr>           <chr>     <chr>                                      <chr>               #>  1 54115096 <NA>                accepted        species   Cephalomanes atrovirens Presl              <NA>                #>  2 54133783 <NA>                accepted        species   Trichomanes crassum Copel.                 2022-11-16 16:14:36 #>  3 54115097 <NA>                accepted        species   Cephalomanes crassum (Copel.) M. G. Price  <NA>                #>  4 54133784 54115098            synonym         species   Trichomanes densinervium Copel.            <NA>                #>  5 54115098 <NA>                accepted        species   Cephalomanes densinervium (Copel.) Copel.  <NA>                #>  6 54133786 54115100            synonym         species   Cephalomanes curvatum (J. Sm.) V. D. Bosch <NA>                #>  7 54133787 54115100            synonym         species   Cephalomanes javanica (Bl.) V. D. Bosch    <NA>                #>  8 54133788 54115100            synonym         species   Cephalomanes oblongifolium Presl           <NA>                #>  9 54133789 54115100            synonym         species   Cephalomanes zollingeri V. D. Bosch        <NA>                #> 10 54133790 54115100            synonym         species   Lacostea javanica (Bl.) Prantl             <NA>                #> # … with 2,442 more rows"},{"path":"https://joelnitta.github.io/dwctaxon/index.html","id":"citing-this-package","dir":"","previous_headings":"","what":"Citing this package","title":"Tools for Working with Darwin Core Taxon Data in R","text":"use package, please cite ! example: example DOI overall package. latest DOI, use using latest version package:  can find DOIs older versions viewing “Releases” menu right.","code":"Nitta, JH (2022) dwctaxon: Tools for working with Darwin Core Taxon data in R. https://doi.org/10.5281/zenodo.6388271"},{"path":"https://joelnitta.github.io/dwctaxon/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"Tools for Working with Darwin Core Taxon Data in R","text":"MIT License","code":""},{"path":"https://joelnitta.github.io/dwctaxon/reference/dct_add_row.html","id":null,"dir":"Reference","previous_headings":"","what":"Add row(s) to a taxonomic database — dct_add_row","title":"Add row(s) to a taxonomic database — dct_add_row","text":"Add one rows taxonomic database Darwin Core (DWC) format.","code":""},{"path":"https://joelnitta.github.io/dwctaxon/reference/dct_add_row.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add row(s) to a taxonomic database — dct_add_row","text":"","code":"dct_add_row(   tax_dat,   taxon_id = NULL,   sci_name = NULL,   tax_status = NULL,   usage_id = NULL,   usage_name = NULL,   new_dat = NULL,   fill_taxon_id = TRUE,   fill_usage_id = TRUE,   stamp_modified = TRUE,   strict = FALSE,   ... )"},{"path":"https://joelnitta.github.io/dwctaxon/reference/dct_add_row.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add row(s) to a taxonomic database — dct_add_row","text":"tax_dat Dataframe; taxonomic database DWC format. taxon_id Character numeric vector; values add taxonID column. Can also use taxonomicID. Ignored new_dat NULL. sci_name Character vector; values add scientificName column. Can also use scientificName. Ignored new_dat NULL. tax_status Character vector; values add taxonomicStatus column. Can also use taxonomicStatus. Ignored new_dat NULL. usage_id Character numeric vector; values add acceptedNameUsageID column. Can also use acceptedNameUsageID. Ignored new_dat NULL. usage_name Character vector; values add acceptedNameUsage column. Can also use acceptedNameUsage. Ignored new_dat NULL. new_dat dataframe including columns corresponding one arguments, except tax_dat. DWC terms can also included additional columns. rows new_dat appended input data (tax_dat). fill_taxon_id Logical vector length 1; taxon_id provided, values taxonID column filled looking scientificName? Default TRUE. fill_usage_id Logical vector length 1; usage_id provided, values acceptedNameUsageID column filled matching acceptedNameUsage scientificName? Default TRUE. stamp_modified Logical vector length 1; modified column new row include timestamp date time creation? strict Logical vector length 1; taxonomic checks run updated taxonomic database? Default FALSE. ... Additional data add, specified sets named character numeric vectors; e.g., parentNameUsageID = \"6SH4\". name must valid column name data DWC format. Ignored new_dat NULL.","code":""},{"path":"https://joelnitta.github.io/dwctaxon/reference/dct_add_row.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add row(s) to a taxonomic database — dct_add_row","text":"Dataframe; taxonomic database DWC format.","code":""},{"path":"https://joelnitta.github.io/dwctaxon/reference/dct_add_row.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add row(s) to a taxonomic database — dct_add_row","text":"Arguments taxon_id, sci_name, tax_status, usage_id, usage_name provided convenience avoid typing longer \"taxonomicID\", \"scientificName\", \"taxonomicStatus\", \"acceptedNameUsageID\", \"acceptedNameUsage\", respectively, latter may used instead. fill_taxon_id fill_usage_id act newly added data (fill columns tax_dat).","code":""},{"path":"https://joelnitta.github.io/dwctaxon/reference/dct_add_row.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add row(s) to a taxonomic database — dct_add_row","text":"","code":"tibble::tibble(   taxonID = \"123\",   scientificName = \"Foogenus barspecies\",   acceptedNameUsageID = NA_character_,   taxonomicStatus = \"accepted\" ) |>   dct_add_row(     sci_name = \"Foogenus barspecies var. bla\",     parentNameUsageID = \"123\",     nameAccordingTo = \"me\",     strict = TRUE   ) #> # A tibble: 2 × 7 #>   taxonID  scientificName               accept…¹ taxon…² paren…³ nameA…⁴ modif…⁵ #>   <chr>    <chr>                        <chr>    <chr>   <chr>   <chr>   <chr>   #> 1 123      Foogenus barspecies          NA       accept… NA      NA      NA      #> 2 cfedfbbb Foogenus barspecies var. bla NA       NA      123     me      2022-1… #> # … with abbreviated variable names ¹​acceptedNameUsageID, ²​taxonomicStatus, #> #   ³​parentNameUsageID, ⁴​nameAccordingTo, ⁵​modified"},{"path":"https://joelnitta.github.io/dwctaxon/reference/dct_check_mapping.html","id":null,"dir":"Reference","previous_headings":"","what":"Check mapping of usage names — dct_check_mapping","title":"Check mapping of usage names — dct_check_mapping","text":"Check names acceptedUsageID map properly taxonID Darwin Core taxonomic data","code":""},{"path":"https://joelnitta.github.io/dwctaxon/reference/dct_check_mapping.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check mapping of usage names — dct_check_mapping","text":"","code":"dct_check_mapping(tax_dat, on_fail = \"error\", on_success = \"data\")"},{"path":"https://joelnitta.github.io/dwctaxon/reference/dct_check_mapping.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check mapping of usage names — dct_check_mapping","text":"tax_dat Dataframe; taxonomic database Darwin Core format. on_fail Character vector length 1, either \"error\" \"summary\". Describes check fails. Default \"error\". on_success Character vector length 1, either  \"logical\" \"data\". Describes check passes. Default \"data\".","code":""},{"path":"https://joelnitta.github.io/dwctaxon/reference/dct_check_mapping.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check mapping of usage names — dct_check_mapping","text":"Depends result check values on_fail on_success: check passes on_success \"logical\", return TRUE check passes on_success \"data\", return input dataframe check fails on_fail \"error\", return error check fails on_fail \"summary\", issue warning return dataframe summary reasons failure","code":""},{"path":"https://joelnitta.github.io/dwctaxon/reference/dct_check_mapping.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check mapping of usage names — dct_check_mapping","text":"following rules enforced: taxonID may identical acceptedNameUsageID within single row Every acceptedNameUsageID must corresponding taxonID","code":""},{"path":"https://joelnitta.github.io/dwctaxon/reference/dct_check_mapping.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check mapping of usage names — dct_check_mapping","text":"","code":"# The bad data has an acceptedNameUsageID (third row, \"4\") that lacks a # corresponding taxonID bad_dat <- tibble::tribble(   ~taxonID, ~acceptedNameUsageID, ~taxonomicStatus, ~scientificName,   \"1\", NA, \"accepted\", \"Species foo\",   \"2\", \"1\", \"synonym\", \"Species bar\",   \"3\", \"4\", \"synonym\", \"Species bat\" ) suppressWarnings(   dct_check_mapping(bad_dat, on_fail = \"summary\") ) #> # A tibble: 1 × 5 #>   taxonID acceptedNameUsageID scientificName error                         check #>   <chr>   <chr>               <chr>          <chr>                         <chr> #> 1 3       4                   Species bat    taxonID detected whose accep… chec…"},{"path":"https://joelnitta.github.io/dwctaxon/reference/dct_check_sci_name.html","id":null,"dir":"Reference","previous_headings":"","what":"Check scientificName — dct_check_sci_name","title":"Check scientificName — dct_check_sci_name","text":"Check correctly formatted scientificName column Darwin Core taxonomic data.","code":""},{"path":"https://joelnitta.github.io/dwctaxon/reference/dct_check_sci_name.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check scientificName — dct_check_sci_name","text":"","code":"dct_check_sci_name(tax_dat, on_fail = \"error\", on_success = \"data\")"},{"path":"https://joelnitta.github.io/dwctaxon/reference/dct_check_sci_name.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check scientificName — dct_check_sci_name","text":"tax_dat Dataframe; taxonomic database Darwin Core format. on_fail Character vector length 1, either \"error\" \"summary\". Describes check fails. Default \"error\". on_success Character vector length 1, either  \"logical\" \"data\". Describes check passes. Default \"data\".","code":""},{"path":"https://joelnitta.github.io/dwctaxon/reference/dct_check_sci_name.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check scientificName — dct_check_sci_name","text":"Depends result check values on_fail on_success: check passes on_success \"logical\", return TRUE check passes on_success \"data\", return input dataframe check fails on_fail \"error\", return error check fails on_fail \"summary\", issue warning return dataframe summary reasons failure","code":""},{"path":"https://joelnitta.github.io/dwctaxon/reference/dct_check_sci_name.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check scientificName — dct_check_sci_name","text":"following rules enforced: scientificName may missing (NA) scientificName must unique","code":""},{"path":"https://joelnitta.github.io/dwctaxon/reference/dct_check_sci_name.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check scientificName — dct_check_sci_name","text":"","code":"suppressWarnings(   dct_check_sci_name(     data.frame(scientificName = NA_character_),     on_fail = \"summary\"   ) ) #> # A tibble: 1 × 3 #>   scientificName check          error                                      #>   <chr>          <chr>          <chr>                                      #> 1 NA             check_sci_name scientificName detected with missing value dct_check_sci_name(data.frame(scientificName = \"a\")) #>   scientificName #> 1              a"},{"path":"https://joelnitta.github.io/dwctaxon/reference/dct_check_tax_status.html","id":null,"dir":"Reference","previous_headings":"","what":"Check that taxonomicStatus is within valid values in\nDarwin Core taxonomic data — dct_check_tax_status","title":"Check that taxonomicStatus is within valid values in\nDarwin Core taxonomic data — dct_check_tax_status","text":"Check taxonomicStatus within valid values Darwin Core taxonomic data","code":""},{"path":"https://joelnitta.github.io/dwctaxon/reference/dct_check_tax_status.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check that taxonomicStatus is within valid values in\nDarwin Core taxonomic data — dct_check_tax_status","text":"","code":"dct_check_tax_status(   tax_dat,   on_fail = \"error\",   on_success = \"data\",   valid_tax_status = Sys.getenv(\"VALID_TAX_STATUS\", unset =     \"accepted, synonym, variant, NA\") )"},{"path":"https://joelnitta.github.io/dwctaxon/reference/dct_check_tax_status.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check that taxonomicStatus is within valid values in\nDarwin Core taxonomic data — dct_check_tax_status","text":"tax_dat Dataframe; taxonomic database Darwin Core format. on_fail Character vector length 1, either \"error\" \"summary\". Describes check fails. Default \"error\". on_success Character vector length 1, either  \"logical\" \"data\". Describes check passes. Default \"data\". valid_tax_status Character vector length 1; valid values taxonomicStatus. value must separated comma. Default \"accepted, synonym, variant, NA\". \"NA\" indicates missing (NA) values valid. Case-sensitive. Can also set environmental variable \"VALID_TAX_STATUS\" (see Examples).","code":""},{"path":"https://joelnitta.github.io/dwctaxon/reference/dct_check_tax_status.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check that taxonomicStatus is within valid values in\nDarwin Core taxonomic data — dct_check_tax_status","text":"Depends result check values on_fail on_success: check passes on_success \"logical\", return TRUE check passes on_success \"data\", return input dataframe check fails on_fail \"error\", return error check fails on_fail \"summary\", issue warning return dataframe summary reasons failure","code":""},{"path":"https://joelnitta.github.io/dwctaxon/reference/dct_check_tax_status.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Check that taxonomicStatus is within valid values in\nDarwin Core taxonomic data — dct_check_tax_status","text":"https://dwc.tdwg.org/terms/#dwc:taxonomicStatus","code":""},{"path":"https://joelnitta.github.io/dwctaxon/reference/dct_check_tax_status.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check that taxonomicStatus is within valid values in\nDarwin Core taxonomic data — dct_check_tax_status","text":"","code":"# The bad data has an taxonomicStatus (third row, \"foo\") that is not # a valid value bad_dat <- tibble::tribble(   ~taxonID, ~acceptedNameUsageID, ~taxonomicStatus, ~scientificName,   \"1\", NA, \"accepted\", \"Species foo\",   \"2\", \"1\", \"synonym\", \"Species bar\",   \"3\", NA, \"foo\", \"Species bat\" ) suppressWarnings(   dct_check_tax_status(bad_dat, on_fail = \"summary\") ) #> # A tibble: 1 × 5 #>   taxonID scientificName taxonomicStatus error                             check #>   <chr>   <chr>          <chr>           <chr>                             <chr> #> 1 3       Species bat    foo             taxonID detected whose taxonomic… chec… # Example of setting valid values of taxonomicStatus via an environmental # variable Sys.setenv(VALID_TAX_STATUS = \"provisionally accepted, synonym, NA\") tibble::tribble(   ~taxonID, ~acceptedNameUsageID, ~taxonomicStatus, ~scientificName,   \"1\", NA, \"provisionally accepted\", \"Species foo\",   \"2\", \"1\", \"synonym\", \"Species bar\",   \"3\", NA, NA, \"Strange name\" ) |>   dct_check_tax_status() #> # A tibble: 3 × 4 #>   taxonID acceptedNameUsageID taxonomicStatus        scientificName #>   <chr>   <chr>               <chr>                  <chr>          #> 1 1       NA                  provisionally accepted Species foo    #> 2 2       1                   synonym                Species bar    #> 3 3       NA                  NA                     Strange name   Sys.unsetenv(\"VALID_TAX_STATUS\")"},{"path":"https://joelnitta.github.io/dwctaxon/reference/dct_check_taxon_id.html","id":null,"dir":"Reference","previous_headings":"","what":"Check taxonID — dct_check_taxon_id","title":"Check taxonID — dct_check_taxon_id","text":"Check correctly formatted taxonID column Darwin Core taxonomic data.","code":""},{"path":"https://joelnitta.github.io/dwctaxon/reference/dct_check_taxon_id.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check taxonID — dct_check_taxon_id","text":"","code":"dct_check_taxon_id(tax_dat, on_fail = \"error\", on_success = \"data\")"},{"path":"https://joelnitta.github.io/dwctaxon/reference/dct_check_taxon_id.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check taxonID — dct_check_taxon_id","text":"tax_dat Dataframe; taxonomic database Darwin Core format. on_fail Character vector length 1, either \"error\" \"summary\". Describes check fails. Default \"error\". on_success Character vector length 1, either  \"logical\" \"data\". Describes check passes. Default \"data\".","code":""},{"path":"https://joelnitta.github.io/dwctaxon/reference/dct_check_taxon_id.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check taxonID — dct_check_taxon_id","text":"Depends result check values on_fail on_success: check passes on_success \"logical\", return TRUE check passes on_success \"data\", return input dataframe check fails on_fail \"error\", return error check fails on_fail \"summary\", issue warning return dataframe summary reasons failure","code":""},{"path":"https://joelnitta.github.io/dwctaxon/reference/dct_check_taxon_id.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check taxonID — dct_check_taxon_id","text":"following rules enforced: taxonID may missing (NA) taxonID must unique","code":""},{"path":"https://joelnitta.github.io/dwctaxon/reference/dct_check_taxon_id.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check taxonID — dct_check_taxon_id","text":"","code":"suppressWarnings(   dct_check_taxon_id(     data.frame(taxonID = NA_character_),     on_fail = \"summary\"   ) ) #> # A tibble: 1 × 3 #>   taxonID error                               check          #>   <chr>   <chr>                               <chr>          #> 1 NA      taxonID detected with missing value check_taxon_id dct_check_taxon_id(data.frame(taxonID = 1)) #>   taxonID #> 1       1"},{"path":"https://joelnitta.github.io/dwctaxon/reference/dct_fill_col.html","id":null,"dir":"Reference","previous_headings":"","what":"Fill a column of a taxonomic database — dct_fill_col","title":"Fill a column of a taxonomic database — dct_fill_col","text":"Fill column taxonomic database Darwin Core (DWC) format.","code":""},{"path":"https://joelnitta.github.io/dwctaxon/reference/dct_fill_col.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fill a column of a taxonomic database — dct_fill_col","text":"","code":"dct_fill_col(   tax_dat,   fill_to = \"acceptedNameUsage\",   fill_from = \"scientificName\",   match_to = \"taxonID\",   match_from = \"acceptedNameUsageID\" )"},{"path":"https://joelnitta.github.io/dwctaxon/reference/dct_fill_col.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fill a column of a taxonomic database — dct_fill_col","text":"tax_dat Dataframe; taxonomic database DWC format. fill_to Character vector length 1; name column fill. fill_from Character vector length 1; name column copy values filling. match_to Character vector length 1; name column match . match_from Character vector length 1; name column match .","code":""},{"path":"https://joelnitta.github.io/dwctaxon/reference/dct_fill_col.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fill a column of a taxonomic database — dct_fill_col","text":"Dataframe; taxonomic database DWC format.","code":""},{"path":"https://joelnitta.github.io/dwctaxon/reference/dct_fill_col.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fill a column of a taxonomic database — dct_fill_col","text":"Several terms (columns) DWC format come pairs \"term\" \"termID\"; example, \"acceptedNameUsage\" \"acceptedNameUsageID\", first value human-readable form (case, scientific name accepted taxon) second value used machine (case, taxonID accepted taxon). pairs include \"parentNameUsage\" \"parentNameUsageID\", \"scientificName\" \"scientificNameID\", etc. None required used given DWC dataset. Often updating data, user may fill one value (e.g., \"acceptedNameUsage\" \"acceptedNameUsageID\"), . purpose dct_fill_col() fill missing column. match_from match_to used locate values used filling cell. values match_to column must unique. default settings fill acceptedNameUsage values scientificName matching acceptedNameUsageID taxonID (see Example).","code":""},{"path":"https://joelnitta.github.io/dwctaxon/reference/dct_fill_col.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fill a column of a taxonomic database — dct_fill_col","text":"","code":"# Fill acceptedNameUsage with values from scientificName by # matching acceptedNameUsageID to taxonID (head(dct_filmies, 5)) |>   dct_fill_col(     fill_to = \"acceptedNameUsage\",     fill_from = \"scientificName\",     match_to = \"taxonID\",     match_from = \"acceptedNameUsageID\"   ) #> # A tibble: 5 × 6 #>   taxonID  acceptedNameUsageID taxonomicStatus taxonRank scientificName  accep…¹ #>   <chr>    <chr>               <chr>           <chr>     <chr>           <chr>   #> 1 54115096 NA                  accepted        species   Cephalomanes a… NA      #> 2 54133783 54115097            synonym         species   Trichomanes cr… Cephal… #> 3 54115097 NA                  accepted        species   Cephalomanes c… NA      #> 4 54133784 54115098            synonym         species   Trichomanes de… Cephal… #> 5 54115098 NA                  accepted        species   Cephalomanes d… NA      #> # … with abbreviated variable name ¹​acceptedNameUsage"},{"path":"https://joelnitta.github.io/dwctaxon/reference/dct_filmies.html","id":null,"dir":"Reference","previous_headings":"","what":"Taxonomic data of filmy ferns — dct_filmies","title":"Taxonomic data of filmy ferns — dct_filmies","text":"Taxonomic data filmy ferns (family Hymenophyllaceae) Darwin Core format. Modified data downloaded Catalog Life Creative Commons Attribution (CC ) 4.0 license.","code":""},{"path":"https://joelnitta.github.io/dwctaxon/reference/dct_filmies.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Taxonomic data of filmy ferns — dct_filmies","text":"","code":"dct_filmies"},{"path":"https://joelnitta.github.io/dwctaxon/reference/dct_filmies.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Taxonomic data of filmy ferns — dct_filmies","text":"Dataframe (tibble), 2451 rows 5 columns. details data format, see https://dwc.tdwg.org/terms/#taxon.","code":""},{"path":"https://joelnitta.github.io/dwctaxon/reference/dct_filmies.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Taxonomic data of filmy ferns — dct_filmies","text":"https://dwc.tdwg.org/terms/#taxon","code":""},{"path":"https://joelnitta.github.io/dwctaxon/reference/dct_fix_format.html","id":null,"dir":"Reference","previous_headings":"","what":"Fix the format of a taxonomic database to conform with Darwin Core Taxon\nstandards — dct_fix_format","title":"Fix the format of a taxonomic database to conform with Darwin Core Taxon\nstandards — dct_fix_format","text":"Fix format taxonomic database conform Darwin Core Taxon standards","code":""},{"path":"https://joelnitta.github.io/dwctaxon/reference/dct_fix_format.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fix the format of a taxonomic database to conform with Darwin Core Taxon\nstandards — dct_fix_format","text":"","code":"dct_fix_format(tax_dat)"},{"path":"https://joelnitta.github.io/dwctaxon/reference/dct_fix_format.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fix the format of a taxonomic database to conform with Darwin Core Taxon\nstandards — dct_fix_format","text":"tax_dat Dataframe; taxonomic database supposed Darwin Core format","code":""},{"path":"https://joelnitta.github.io/dwctaxon/reference/dct_fix_format.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fix the format of a taxonomic database to conform with Darwin Core Taxon\nstandards — dct_fix_format","text":"Dataframe; taxonomic database Darwin Core format","code":""},{"path":"https://joelnitta.github.io/dwctaxon/reference/dct_modify_row.html","id":null,"dir":"Reference","previous_headings":"","what":"Modify row(s) of a taxonomic database — dct_modify_row","title":"Modify row(s) of a taxonomic database — dct_modify_row","text":"Modify one rows taxonomic database Darwin Core (DWC) format.","code":""},{"path":"https://joelnitta.github.io/dwctaxon/reference/dct_modify_row.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Modify row(s) of a taxonomic database — dct_modify_row","text":"","code":"dct_modify_row(   tax_dat,   taxon_id = NULL,   sci_name = NULL,   tax_status = NULL,   usage_id = NULL,   usage_name = NULL,   clear_usage_id = NULL,   fill_usage_name = FALSE,   remap_names = TRUE,   remap_variant = FALSE,   stamp_modified = TRUE,   strict = FALSE,   quiet = FALSE,   args_tbl = NULL,   ... )"},{"path":"https://joelnitta.github.io/dwctaxon/reference/dct_modify_row.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Modify row(s) of a taxonomic database — dct_modify_row","text":"tax_dat Dataframe; taxonomic database DWC format. taxon_id Character numeric vector length 1; taxonID row modified (selected row). Can also use taxonID. sci_name Character vector length 1; scientificName row modified taxon_id NULL, scientificName assign selected row taxon_id provided (see Details). Can also use scientificName. tax_status Character vector length 1; taxonomicStatus assign selected row. Can also use taxonomicStatus. usage_id Character numeric vector length 1; acceptedNameUsageID assign selected row. Can also use acceptedNameUsageID usage_name Character vector length 1; acceptedNameUsage assign selected row. Can also use acceptedNameUsage. clear_usage_id Logical vector length 1; acceptedNameUsageID selected row set NA? Default: TRUE tax_status matches \"accepted\" (case insensitive). fill_usage_name Logical vector length 1; acceptedNameUsage selected row set scientificName corresponding acceptedNameUsageID? Default FALSE. remap_names Logical vector length 1; acceptedNameUsageID updated (remapped) rows acceptedNameUsageID taxonID row modified? Default TRUE. remap_variant remap_names, applies specifically rows taxonomicStatus \"variant\". Default FALSE. stamp_modified Logical vector length 1; modified column modified row assigned timestamp date time modification? strict Logical vector length 1; taxonomic checks run updated taxonomic database? quiet Logical vector length 1; warnings silenced? args_tbl dataframe including columns corresponding one arguments, except tax_dat. case, input taxonomic database modified sequentially row input args_tbl. DWC terms can also included additional columns, similar using ... modify single row. ... DWC terms modify, specified sets named values. element vector must name corresponding valid DWC term; see dct_terms.","code":""},{"path":"https://joelnitta.github.io/dwctaxon/reference/dct_modify_row.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Modify row(s) of a taxonomic database — dct_modify_row","text":"Dataframe; taxonomic database DWC format","code":""},{"path":"https://joelnitta.github.io/dwctaxon/reference/dct_modify_row.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Modify row(s) of a taxonomic database — dct_modify_row","text":"Arguments taxon_id, sci_name, tax_status, usage_id, usage_name provided convenience avoid typing longer \"taxonomicID\", \"scientificName\", \"taxonomicStatus\", \"acceptedNameUsageID\", \"acceptedNameUsage\", respectively, latter may used instead. taxon_id used identify row(s) modify modified. sci_name can used way taxon_id provided (long sci_name matches single row). taxon_id sci_name provided, sci_name assigned scientificName row identified taxon_id, replacing value already exists. tax_status, usage_id, usage_name, arguments provided DWC terms assigned selected row (.e., modify row). remap_names TRUE (default) usage_id (.e., acceptedNameUsageID) provided, names acceptedNameUsageID matching taxonID selected row (.e., synonyms row) also acceptedNameUsageID replaced new acceptedNameUsageID. behavior applied names taxonomicStatus \"variant\" default, can turned names remap_variant. Can either modify single row input taxonomic database argument supplied vector length 1, can apply set changes taxonomic database input supplied dataframe via args_tbl.","code":""},{"path":"https://joelnitta.github.io/dwctaxon/reference/dct_modify_row.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Modify row(s) of a taxonomic database — dct_modify_row","text":"","code":"# Swap the accepted / synonym status of # Cephalomanes crassum (Copel.) M. G. Price # and Trichomanes crassum Copel. dct_filmies |>   dct_modify_row(     sci_name = \"Cephalomanes crassum (Copel.) M. G. Price\",     tax_status = \"synonym\",     usage_name = \"Trichomanes crassum Copel.\"   ) |>   dct_modify_row(     sci_name = \"Trichomanes crassum Copel.\",     tax_status = \"accepted\"   ) |>   dct_validate(     check_tax_status = FALSE,     check_mapping_strict = FALSE,     check_sci_name = FALSE   ) #> # A tibble: 2,451 × 6 #>    taxonID  acceptedNameUsageID taxonomicStatus taxonRank scientificName modif…¹ #>    <chr>    <chr>               <chr>           <chr>     <chr>          <chr>   #>  1 54115096 NA                  accepted        species   Cephalomanes … NA      #>  2 54133783 NA                  accepted        species   Trichomanes c… 2022-1… #>  3 54115097 54133783            synonym         species   Cephalomanes … 2022-1… #>  4 54133784 54115098            synonym         species   Trichomanes d… NA      #>  5 54115098 NA                  accepted        species   Cephalomanes … NA      #>  6 54133786 54115100            synonym         species   Cephalomanes … NA      #>  7 54133787 54115100            synonym         species   Cephalomanes … NA      #>  8 54133788 54115100            synonym         species   Cephalomanes … NA      #>  9 54133789 54115100            synonym         species   Cephalomanes … NA      #> 10 54133790 54115100            synonym         species   Lacostea java… NA      #> # … with 2,441 more rows, and abbreviated variable name ¹​modified # Sometimes changing one name will affect others, if they map # to the new synonym dct_modify_row(   tax_dat = dct_filmies |> head(),   sci_name = \"Cephalomanes crassum (Copel.) M. G. Price\",   tax_status = \"synonym\",   usage_name = \"Cephalomanes densinervium (Copel.) Copel.\" ) #> # A tibble: 6 × 6 #>   taxonID  acceptedNameUsageID taxonomicStatus taxonRank scientificName  modif…¹ #>   <chr>    <chr>               <chr>           <chr>     <chr>           <chr>   #> 1 54115096 NA                  accepted        species   Cephalomanes a… NA      #> 2 54133783 54115098            synonym         species   Trichomanes cr… 2022-1… #> 3 54115097 54115098            synonym         species   Cephalomanes c… 2022-1… #> 4 54133784 54115098            synonym         species   Trichomanes de… NA      #> 5 54115098 NA                  accepted        species   Cephalomanes d… NA      #> 6 54133786 54115100            synonym         species   Cephalomanes c… NA      #> # … with abbreviated variable name ¹​modified # Apply a set of changes library(tibble) updates <- tibble(   sci_name = c(     \"Cephalomanes atrovirens Presl\",     \"Cephalomanes crassum (Copel.) M. G. Price\"   ),   tax_status = \"synonym\",   usage_name = \"Trichomanes crassum Copel.\" ) dct_filmies |>   dct_modify_row(args_tbl = updates) |>   dct_modify_row(     sci_name = \"Trichomanes crassum Copel.\",     tax_status = \"accepted\"   ) #> # A tibble: 2,451 × 6 #>    taxonID  acceptedNameUsageID taxonomicStatus taxonRank scientificName modif…¹ #>    <chr>    <chr>               <chr>           <chr>     <chr>          <chr>   #>  1 54115096 54133783            synonym         species   Cephalomanes … NA      #>  2 54133783 NA                  accepted        species   Trichomanes c… 2022-1… #>  3 54115097 54133783            synonym         species   Cephalomanes … NA      #>  4 54133784 54115098            synonym         species   Trichomanes d… NA      #>  5 54115098 NA                  accepted        species   Cephalomanes … NA      #>  6 54133786 54115100            synonym         species   Cephalomanes … NA      #>  7 54133787 54115100            synonym         species   Cephalomanes … NA      #>  8 54133788 54115100            synonym         species   Cephalomanes … NA      #>  9 54133789 54115100            synonym         species   Cephalomanes … NA      #> 10 54133790 54115100            synonym         species   Lacostea java… NA      #> # … with 2,441 more rows, and abbreviated variable name ¹​modified"},{"path":"https://joelnitta.github.io/dwctaxon/reference/dct_terms.html","id":null,"dir":"Reference","previous_headings":"","what":"Darwin Core Taxon terms — dct_terms","title":"Darwin Core Taxon terms — dct_terms","text":"table valid Darwin Core terms. terms Taxon class record-level included.","code":""},{"path":"https://joelnitta.github.io/dwctaxon/reference/dct_terms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Darwin Core Taxon terms — dct_terms","text":"","code":"dct_terms"},{"path":"https://joelnitta.github.io/dwctaxon/reference/dct_terms.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Darwin Core Taxon terms — dct_terms","text":"Dataframe (tibble), including three columns: group: Darwin Core term group; either \"taxon\" (terms Taxon class) \"record-level\" (terms generic might apply type record dataset.) term: Darwin Core term type: Type data, corresponding class R (except \"date\"). two additional attributes: retrieved: Date terms obtained url: URL terms obtained","code":""},{"path":"https://joelnitta.github.io/dwctaxon/reference/dct_terms.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Darwin Core Taxon terms — dct_terms","text":"https://dwc.tdwg.org/terms/#taxon","code":""},{"path":"https://joelnitta.github.io/dwctaxon/reference/dct_validate.html","id":null,"dir":"Reference","previous_headings":"","what":"Check that a taxonomic database is correctly formatted — dct_validate","title":"Check that a taxonomic database is correctly formatted — dct_validate","text":"Stops error check fails. checks geared towards able use taxonomic database taxonomic name resolution species level.","code":""},{"path":"https://joelnitta.github.io/dwctaxon/reference/dct_validate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check that a taxonomic database is correctly formatted — dct_validate","text":"","code":"dct_validate(   tax_dat,   check_taxon_id = TRUE,   check_tax_status = TRUE,   check_mapping = TRUE,   check_mapping_strict = TRUE,   check_sci_name = TRUE,   check_status_diff = !check_sci_name,   check_col_names = TRUE,   valid_tax_status = Sys.getenv(\"VALID_TAX_STATUS\", unset =     \"accepted, synonym, variant, NA\"),   on_success = \"data\",   on_fail = \"error\" )"},{"path":"https://joelnitta.github.io/dwctaxon/reference/dct_validate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check that a taxonomic database is correctly formatted — dct_validate","text":"tax_dat Dataframe; taxonomic database Darwin Core format. check_taxon_id Logical; instances taxonID required non-missing unique? check_tax_status Logical; taxonomic names required include valid value taxonomic status (default, \"accepted\", \"synonym\", \"variant\")? check_mapping Logical; values acceptedNameUsageID required map taxonID existing name? check_mapping_strict Logical; rules mapping variants synonyms enforced? (see Details) check_sci_name Logical; instances scientificName required non-missing unique? check_status_diff Logical; scientific name allowed one taxonomic status? Default FALSE check_sci_name TRUE, since check_sci_name makes check redundant. check_col_names Logical; column names required valid Darwin Core term? valid_tax_status Character vector length 1; valid values taxonomicStatus. value must separated comma. Default \"accepted, synonym, variant, NA\". \"NA\" indicates missing (NA) values valid. Case-sensitive. Can also set environmental variable \"VALID_TAX_STATUS\" (see Examples). on_success Character vector length 1, either  \"logical\" \"data\". Describes check passes. Default \"data\". on_fail Character vector length 1, either \"error\" \"summary\". Describes check fails. Default \"error\".","code":""},{"path":"https://joelnitta.github.io/dwctaxon/reference/dct_validate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check that a taxonomic database is correctly formatted — dct_validate","text":"Depends result check values on_fail on_success: check passes on_success \"logical\", return TRUE check passes on_success \"data\", return input dataframe check fails on_fail \"error\", return error check fails on_fail \"summary\", issue warning return dataframe summary reasons failure","code":""},{"path":"https://joelnitta.github.io/dwctaxon/reference/dct_validate.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check that a taxonomic database is correctly formatted — dct_validate","text":"check_mapping_strict check_status_diff, \"accepted\", \"synonym\", \"variant\" determined string matching taxonomicStatus; \"provisionally accepted\" counted \"accepted\", \"ambiguous synonym\" counted \"synonym\", etc (case-sensitive). check_mapping_strict, following rules enforced: Rows taxonomicStatus \"synonym\" (synonyms) must acceptedNameUsageID matching taxonID accepted name ( taxonomicStatus \"accepted\") Rows taxonomicStatus \"variant\" (orthographic variants) must acceptedNameUsageID matching taxonID accepted name synonym (another variant) Rows taxonomicStatus \"accepted\" must value entered acceptedNameUsageID Rows value acceptedNameUsageID must valid value taxonomicStatus.","code":""},{"path":"https://joelnitta.github.io/dwctaxon/reference/dct_validate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check that a taxonomic database is correctly formatted — dct_validate","text":"","code":"dct_validate(   dct_filmies,   check_sci_name = FALSE ) #> # A tibble: 2,451 × 5 #>    taxonID  acceptedNameUsageID taxonomicStatus taxonRank scientificName         #>    <chr>    <chr>               <chr>           <chr>     <chr>                  #>  1 54115096 NA                  accepted        species   Cephalomanes atrovire… #>  2 54133783 54115097            synonym         species   Trichomanes crassum C… #>  3 54115097 NA                  accepted        species   Cephalomanes crassum … #>  4 54133784 54115098            synonym         species   Trichomanes densinerv… #>  5 54115098 NA                  accepted        species   Cephalomanes densiner… #>  6 54133786 54115100            synonym         species   Cephalomanes curvatum… #>  7 54133787 54115100            synonym         species   Cephalomanes javanica… #>  8 54133788 54115100            synonym         species   Cephalomanes oblongif… #>  9 54133789 54115100            synonym         species   Cephalomanes zollinge… #> 10 54133790 54115100            synonym         species   Lacostea javanica (Bl… #> # … with 2,441 more rows"}]
