% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dct_modify_row.R
\name{dct_modify_row}
\alias{dct_modify_row}
\title{Modify row(s) of a taxonomic database}
\usage{
dct_modify_row(
  tax_dat,
  taxon_id = NULL,
  sci_name = NULL,
  tax_status = NULL,
  usage_id = NULL,
  usage_name = NULL,
  clear_usage_id = NULL,
  fill_usage_name = FALSE,
  remap_names = TRUE,
  remap_variant = FALSE,
  stamp_modified = TRUE,
  strict = FALSE,
  quiet = FALSE,
  args_tbl = NULL,
  ...
)
}
\arguments{
\item{tax_dat}{Dataframe; taxonomic database in DWC format.}

\item{taxon_id}{Character or numeric vector of length 1; taxonID of the row
to be modified (the selected row). Can also use \code{taxonID}.}

\item{sci_name}{Character vector of length 1; scientificName of the row to
be modified if \code{taxon_id} is \code{NULL}, OR the scientificName to assign to the
selected row if \code{taxon_id} is provided (see Details).
Can also use \code{scientificName}.}

\item{tax_status}{Character vector of length 1; taxonomicStatus to
assign to the selected row. Can also use \code{taxonomicStatus}.}

\item{usage_id}{Character or numeric vector of length 1; acceptedNameUsageID
to assign to the selected row. Can also use \code{acceptedNameUsageID}}

\item{usage_name}{Character vector of length 1; acceptedNameUsage to assign
to the selected row. Can also use \code{acceptedNameUsage}.}

\item{clear_usage_id}{Logical vector of length 1; should
acceptedNameUsageID of the selected row be set to \code{NA}? Default: \code{TRUE} if
\code{tax_status} matches "accepted" (case insensitive).}

\item{fill_usage_name}{Logical vector of length 1; should the
acceptedNameUsage of the selected row be set to the
scientificName corresponding to its acceptedNameUsageID? Default \code{FALSE}.}

\item{remap_names}{Logical vector of length 1; should the
acceptedNameUsageID be updated (remapped) for rows with the same
acceptedNameUsageID as the taxonID of the row to be modified? Default \code{TRUE}.}

\item{remap_variant}{Same as \code{remap_names}, but applies specifically to
rows with taxonomicStatus of "variant". Default \code{FALSE}.}

\item{stamp_modified}{Logical vector of length 1; should the \code{modified}
column of any modified row be assigned a timestamp with the date and time
of modification?}

\item{strict}{Logical vector of length 1; should taxonomic checks be run on
the updated taxonomic database?}

\item{quiet}{Logical vector of length 1; should warnings be silenced?}

\item{args_tbl}{A dataframe including columns corresponding to one or more of
the above arguments, except for \code{tax_dat}. In this case, the input taxonomic
database will be modified sequentially over each row of input in \code{args_tbl}.
Other DWC terms can also be included as additional columns,
similar to using \code{...} to modify a single row.}

\item{...}{other DWC terms to modify, specified as sets of named values.
Each element of the vector must have a name corresponding to a valid
DWC term; see \link{dct_terms}.}
}
\value{
Dataframe; taxonomic database in DWC format
}
\description{
Modify one or more rows in a taxonomic database in Darwin Core (DWC) format.
}
\details{
Arguments \code{taxon_id}, \code{sci_name}, \code{tax_status}, \code{usage_id}, and \code{usage_name}
are provided as convenience to avoid typing the longer "taxonomicID",
"scientificName", "taxonomicStatus", "acceptedNameUsageID", and
"acceptedNameUsage", respectively, but the latter may be used instead.

\code{taxon_id} is only used to identify the row(s) to modify and is not itself
modified. \code{sci_name} can be used in the same way if \code{taxon_id} is not
provided (as long as \code{sci_name} matches a single row). If both \code{taxon_id} and
\code{sci_name} are provided, \code{sci_name} will be assigned to the scientificName of
the row identified by \code{taxon_id}, replacing any value that already exists.

\code{tax_status}, \code{usage_id}, \code{usage_name}, and any other arguments provided that
are DWC terms will be assigned to the selected row (i.e., they will
modify the row).

If \code{remap_names} is \code{TRUE} (default) and \code{usage_id} (i.e.,
acceptedNameUsageID) is provided, any names that have an acceptedNameUsageID
matching the taxonID of the selected row (i.e., synonyms of that row) will
also have their acceptedNameUsageID replaced with the new
acceptedNameUsageID. This behavior is not applied to names with
taxonomicStatus of "variant" by default, but can be turned on for such names
with \code{remap_variant}.

Can either modify a single row in the input taxonomic database if each
argument is supplied as a vector of length 1, or can apply a set of changes
to the taxonomic database if the input is supplied as a dataframe via
\code{args_tbl}.
}
\examples{
# Swap the accepted / synonym status of
# Cephalomanes crassum (Copel.) M. G. Price
# and Trichomanes crassum Copel.
dct_filmies |>
  dct_modify_row(
    sci_name = "Cephalomanes crassum (Copel.) M. G. Price",
    tax_status = "synonym",
    usage_name = "Trichomanes crassum Copel."
  ) |>
  dct_modify_row(
    sci_name = "Trichomanes crassum Copel.",
    tax_status = "accepted"
  ) |>
  dct_validate(
    check_tax_status = FALSE,
    check_mapping_strict = FALSE,
    check_sci_name = FALSE
  )

# Sometimes changing one name will affect others, if they map
# to the new synonym
dct_modify_row(
  tax_dat = dct_filmies |> head(),
  sci_name = "Cephalomanes crassum (Copel.) M. G. Price",
  tax_status = "synonym",
  usage_name = "Cephalomanes densinervium (Copel.) Copel."
)

# Apply a set of changes
library(tibble)
updates <- tibble(
  sci_name = c(
    "Cephalomanes atrovirens Presl",
    "Cephalomanes crassum (Copel.) M. G. Price"
  ),
  tax_status = "synonym",
  usage_name = "Trichomanes crassum Copel."
)
dct_filmies |>
  dct_modify_row(args_tbl = updates) |>
  dct_modify_row(
    sci_name = "Trichomanes crassum Copel.",
    tax_status = "accepted"
  )
}
