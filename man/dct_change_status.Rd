% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dct_change_status.R
\name{dct_change_status}
\alias{dct_change_status}
\title{Change the taxonomic status of data in a taxonomic database}
\usage{
dct_change_status(
  tax_dat,
  taxon_id = NULL,
  sci_name = NULL,
  new_status = NULL,
  usage_id = NULL,
  usage_name = NULL,
  clear_usage_id = grepl("accepted", new_status, ignore.case = TRUE),
  strict = FALSE,
  quiet = FALSE,
  args_tbl = NULL,
  ...
)
}
\arguments{
\item{tax_dat}{Dataframe; taxonomic database in Darwin Core format.}

\item{taxon_id}{Character vector of length 1; taxonID for the entry to be
changed.}

\item{sci_name}{Character vector of length 1; scientificName for the entry to
be changed.}

\item{new_status}{Character vector of length 1; updated taxonomicStatus to
use for the entry.}

\item{usage_id}{Character vector of length 1; taxonID for accepted name if
new status is synonym.}

\item{usage_name}{Character vector of length 1; scientificName for accepted
name if new status is synonym.}

\item{clear_usage_id}{Logical vector of length 1; should
\code{acceptedNameUsageID} be set to \code{NA}?. Default: TRUE if \code{new_status} is
"accepted" (case insensitive).}

\item{strict}{Logical vector of length 1; should taxonomic checks be run on
the updated taxonomic database?}

\item{quiet}{Logical vector of length 1; should warnings be silenced?}

\item{args_tbl}{A dataframe including columns corresponding to one or more of
the above arguments, except for \code{tax_dat}. In this case, the input taxonomic
database will be modified sequentially over each row of input in \code{args_tbl}.}

\item{...}{Additional arguments passed to \code{\link[=dct_validate]{dct_validate()}}; only used if
\code{strict} is TRUE.}

\item{remap_variety}{Logical vector of length 1; should the
\code{acceptedNameUsageID} of names with \code{taxonomicStatus} of "variety"
be updated (remapped) if they are varieties of the entry to be changed
(i.e., if their \code{acceptedNameUsageID} is the same as the \code{taxonID} of the
entry to be changed)?}

\item{stamp_modified}{Logical vector of length 1; should the \code{modified}
column of any modified row be changed to a timestamp with the date and time
of modification?}
}
\value{
Dataframe; taxonomic database in Darwin Core format
}
\description{
Only one of \code{taxon_id} or \code{sci_name} needs to be entered. Either will
work if as long as it makes a partial or full match to one row in the data.
}
\details{
\code{usage_id} or \code{usage_name} should be provided if the new status is a synonym;
either will work as it makes a partial or full match to one row in the data.

Can either modify a single row in the input taxonomic database if each
argument is supplied as a vector of length 1, or can apply a set of changes
to the taxonomic database if the input is supplied as a dataframe.
}
\examples{
# Swap the accepted / synonym status of
# Cephalomanes crassum (Copel.) M. G. Price
# and Trichomanes crassum Copel.
dct_filmies |>
  dct_change_status(
    sci_name = "Cephalomanes crassum (Copel.) M. G. Price",
    new_status = "synonym",
    usage_name = "Trichomanes crassum Copel."
  ) |>
  dct_change_status(
    sci_name = "Trichomanes crassum Copel.",
    new_status = "accepted"
  ) |>
  dct_validate(
    check_tax_status = FALSE,
    check_mapping_strict = FALSE,
    check_sci_name = FALSE)

# Sometimes changing one name will affect others, if they map
# to the new synonym
dct_change_status(
  tax_dat = dct_filmies |> head(),
  sci_name = "Cephalomanes crassum (Copel.) M. G. Price",
  new_status = "synonym",
  usage_name = "Cephalomanes densinervium (Copel.) Copel."
)

# Apply a set of changes
library(tibble)
updates <- tibble(
  sci_name = c("Cephalomanes atrovirens Presl",
    "Cephalomanes crassum (Copel.) M. G. Price"),
  new_status = "synonym",
  usage_name = "Trichomanes crassum Copel."
)
dct_filmies |>
  dct_change_status(args_tbl = updates) |>
  dct_change_status(sci_name = "Trichomanes crassum Copel.",
    new_status = "accepted")
}
